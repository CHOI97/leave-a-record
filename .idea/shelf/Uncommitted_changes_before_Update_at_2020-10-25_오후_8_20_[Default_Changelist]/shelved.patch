Index: app/src/main/java/com/example/leave_a_record/InterfaceActivity/MapsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.leave_a_record.InterfaceActivity;\r\n\r\nimport android.R.drawable;\r\nimport android.Manifest;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Color;\r\nimport android.location.Location;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.Menu;\r\nimport android.view.MenuInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.fragment.app.FragmentActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.leave_a_record.Adapter.PinCourseListAdapter;\r\nimport com.example.leave_a_record.Adapter.USERAdapter;\r\nimport com.example.leave_a_record.PinCourseListItem;\r\nimport com.example.leave_a_record.R;\r\nimport com.example.leave_a_record.fragment.tripCourse;\r\nimport com.example.leave_a_record.image_edit_data;\r\nimport com.google.android.gms.common.ConnectionResult;\r\nimport com.google.android.gms.common.api.GoogleApiClient;\r\nimport com.google.android.gms.location.FusedLocationProviderClient;\r\nimport com.google.android.gms.location.LocationServices;\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.model.BitmapDescriptor;\r\nimport com.google.android.gms.maps.model.BitmapDescriptorFactory;\r\nimport com.google.android.gms.maps.model.CustomCap;\r\nimport com.google.android.gms.maps.model.JointType;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.maps.model.Marker;\r\nimport com.google.android.gms.maps.model.MarkerOptions;\r\nimport com.google.android.gms.maps.model.Polygon;\r\nimport com.google.android.gms.maps.model.Polyline;\r\nimport com.google.android.gms.maps.model.PolylineOptions;\r\nimport com.google.android.gms.maps.model.RoundCap;\r\nimport com.google.android.gms.maps.model.SquareCap;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class MapsActivity extends AppCompatActivity implements OnMapReadyCallback, GoogleApiClient.ConnectionCallbacks, GoogleApiClient.OnConnectionFailedListener, GoogleMap.OnPolylineClickListener,GoogleMap.OnPolygonClickListener {\r\n\r\n\r\n\r\n    // 권한 체크 요청 코드 정의\r\n    public static final int REQUEST_CODE_PERMISSIONS = 1000;\r\n    ArrayList<PinCourseListItem> PincourseDataArray = new ArrayList<>();\r\n    private GoogleMap mMap;\r\n    private GoogleApiClient mGoogleApiClient;\r\n    RecyclerView rv_pincourse;\r\n    // 위치 정보 얻는 객체\r\n    private FusedLocationProviderClient mFusedLocationClient;\r\n    private PinCourseListAdapter pclAdapter;\r\n    private List<PinCourseListItem> pclListItem;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_maps);\r\n\r\n        pclListItem=new ArrayList<>();\r\n//        pclListItem.add(new PinCourseListItem(\"2020\"));\r\n        pclListItem.add(new PinCourseListItem(\"2020\"));\r\n        pclListItem.add(new PinCourseListItem(\"2030\"));\r\n        pclListItem.add(new PinCourseListItem(\"2040\"));\r\n\r\n        Log.d(\"현재 진행중인 것은\", \"Recyclerview. ======================================\");\r\n\r\n        //recyclerview\r\n        Log.d(\"success\", \"tripCourse case:success\"); //로그찍기\r\n        rv_pincourse=findViewById(R.id.rv_pincourse);\r\n        Log.d(\"현재 진행중인 것은\", \"Recyclerview. ======================================find view id\");\r\n        pclAdapter =  new PinCourseListAdapter(this,pclListItem);\r\n        rv_pincourse.setAdapter(pclAdapter);\r\n\r\n//        userAdapter =  new USERAdapter(this, imageditdataList);\r\n//        viewPager2.setAdapter(userAdapter);\r\n\r\n        Toolbar toolbar =findViewById(R.id.toolbar);\r\n        setSupportActionBar(toolbar);\r\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);//뒤로가기\r\n        getSupportActionBar().setDisplayShowTitleEnabled(false);\r\n//        actionBar = getSupportActionBar();\r\n//        actionBar.setDisplayShowCustomEnabled(true);\r\n//        actionBar.setDisplayShowTitleEnabled(false);//기본 제목을 없애줍니다.\r\n//        actionBar.setDisplayHomeAsUpEnabled(true);\r\n\r\n\r\n        // GoogleAPIClient의 인스턴스 생성\r\n        if (mGoogleApiClient == null) {\r\n            mGoogleApiClient = new GoogleApiClient.Builder(this)\r\n                    .addConnectionCallbacks(this)\r\n                    .addOnConnectionFailedListener(this)\r\n                    .addApi(LocationServices.API)\r\n                    .build();\r\n        }\r\n\r\n        // Obtain the SupportMapFragment and get notified when the map is ready to be used.\r\n        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()\r\n                .findFragmentById(R.id.map);\r\n        mapFragment.getMapAsync(this);\r\n\r\n        mFusedLocationClient = LocationServices.getFusedLocationProviderClient(this);\r\n    }\r\n\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        MenuInflater menuInflater = getMenuInflater();\r\n        menuInflater.inflate(R.menu.menu, menu);\r\n        return super.onCreateOptionsMenu(menu);\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(@NonNull MenuItem item) {\r\n        switch (item.getItemId()){\r\n            case R.id.logout:\r\n                //select logout item\r\n                break;\r\n            case R.id.account:\r\n                //select account item\r\n                break;\r\n            case android.R.id.home:\r\n                //select back button\r\n                finish();\r\n                break;\r\n        }\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        mGoogleApiClient.connect();\r\n        super.onStart();\r\n    }\r\n\r\n    @Override\r\n    protected void onStop() {\r\n        mGoogleApiClient.disconnect();\r\n        super.onStop();\r\n    }\r\n\r\n    /**\r\n     * Manipulates the map once available.\r\n     * This callback is triggered when the map is ready to be used.\r\n     * This is where we can add markers or lines, add listeners or move the camera. In this case,\r\n     * we just add a marker near Sydney, Australia.\r\n     * If Google Play services is not installed on the device, the user will be prompted to install\r\n     * it inside the SupportMapFragment. This method will only be triggered once the user has\r\n     * installed Google Play services and returned to the app.\r\n     */\r\n    @Override\r\n    public void onMapReady(GoogleMap googleMap) {\r\n        mMap = googleMap;\r\n\r\n\r\n\r\n        String[] xy = new String[]{\"37.221900\",\"127.18800\",\"37.221804\",\"127.186695\",\"37.220000\",\"127.186666\"};\r\n\r\n        ArrayList<LatLng> loc=new ArrayList<LatLng>();\r\n\r\n        int count = 1;\r\n        for (int i=0;i<xy.length;i++){\r\n\r\n            double tmp = Double.parseDouble(xy[i]);\r\n            double tmp2 = Double.parseDouble(xy[++i]);\r\n\r\n\r\n            LatLng latLng = new LatLng(tmp, tmp2);\r\n\r\n            loc.add(latLng);\r\n\r\n\r\n            mMap.addMarker(new MarkerOptions().position(latLng).title(\"Pin\"+count).icon(BitmapDescriptorFactory.fromResource(R.drawable.ic_pin_purple)));\r\n            count++;\r\n        }\r\n\r\n\r\n\r\n        mMap.moveCamera(CameraUpdateFactory.newLatLng(loc.get(loc.size()-1)));\r\n\r\n\r\n//        // 서울 위치\r\n//        LatLng seoul = new LatLng(37.566535, 126.97796919);\r\n//        mMap.addMarker(new MarkerOptions().position(seoul).title(\"Marker in Seoul\"));\r\n//\r\n//        // 명지대 위치 추가\r\n//        LatLng MJU = new LatLng(37.221804, 127.186695);\r\n//        mMap.addMarker(new MarkerOptions()\r\n//                .position(MJU)\r\n//                .title(\"명지대\"));\r\n//\r\n//        //핀 연결 확인용 좌표 추가\r\n//        LatLng MJU2 = new LatLng(37.220000, 127.186666);\r\n//        mMap.addMarker(new MarkerOptions()\r\n//                .position(MJU2)\r\n//                .title(\"명지대2\"));\r\n//        mMap.moveCamera(CameraUpdateFactory.newLatLng(MJU2));\r\n\r\n        // 카메라 줌\r\n        mMap.animateCamera(CameraUpdateFactory.zoomTo(17.0f));\r\n\r\n        // 인포 윈도우 클릭시 전화 걸기 -> 뭔가 게시물 쓸때 쓸수있을거 같아서 남겨둠\r\n        mMap.setOnInfoWindowClickListener(new GoogleMap.OnInfoWindowClickListener() {\r\n            @Override\r\n            public void onInfoWindowClick(Marker marker) {\r\n                Intent intent = new Intent(Intent.ACTION_DIAL);\r\n                intent.setData(Uri.parse(\"tel:0312365043\"));\r\n                if (intent.resolveActivity(getPackageManager()) != null) {\r\n                    startActivity(intent);\r\n                }\r\n            }\r\n        });\r\n\r\n        //arraylist 다시 배열에 넣는거 아직 않마 까먹ㅇ멋어ㅏ\r\n        LatLng[] line = {\r\n                loc.get(0),loc.get(1),loc.get(2)\r\n        };\r\n        //좌표끼리 선 긋기 좌표가 추가 될때마다 새로운 선을 만들어야 하나.. 아니면 그냥 좌표하나씩 추가해야하나 고민\r\n        //일단 좌표에 들어온 순서로 선이 그어짐 -> 시간별로 추가할수 있도록 해야 함\r\n\r\n\r\n        //좌표 두개마다 각각의 polyline을 생성해야 각각 화살표로 나올수 있음\r\n        //for문 사용해서 polyline 만들어보기\r\n//        for(int i=0; i<line.length;){\r\n//            Polyline polyline1 = googleMap.addPolyline(new PolylineOptions()\r\n//                    .clickable(true)\r\n//                    .add(   line[i], line[++i]\r\n//                    ) .width(10)\r\n//\r\n//                    .geodesic(true));\r\n//\r\n//\r\n//        }\r\n\r\n\r\n        Polyline polyline1 = googleMap.addPolyline(new PolylineOptions()\r\n                .clickable(true)\r\n                .add(   line\r\n                ) .width(10)\r\n\r\n                .geodesic(true));\r\n\r\n        polyline1.setEndCap(new CustomCap(BitmapDescriptorFactory.fromResource(R.drawable.ic_arrow), 15));\r\n        polyline1.setStartCap(new CustomCap(BitmapDescriptorFactory.fromResource(R.drawable.ic_circle), 15));\r\n\r\n\r\n\r\n        googleMap.setOnPolylineClickListener(this);\r\n        googleMap.setOnPolygonClickListener(this);\r\n\r\n\r\n\r\n    }\r\n\r\n    //두 좌표간 거리 구함 -> 어디다 쓰지? 아직 안씀\r\n    public double getDistance(LatLng LatLng1, LatLng LatLng2) {\r\n        double distance = 0;\r\n        Location locationA = new Location(\"A\");\r\n        locationA.setLatitude(LatLng1.latitude);\r\n        locationA.setLongitude(LatLng1.longitude);\r\n        Location locationB = new Location(\"B\");\r\n        locationB.setLatitude(LatLng2.latitude);\r\n        locationB.setLongitude(LatLng2.longitude);\r\n        distance = locationA.distanceTo(locationB);\r\n\r\n        return distance;\r\n    }\r\n\r\n    @Override\r\n    public void onConnected(@Nullable Bundle bundle) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\r\n\r\n        switch (requestCode) {\r\n            case REQUEST_CODE_PERMISSIONS:\r\n                if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n                    Toast.makeText(this, \"권한 체크 거부 됨\", Toast.LENGTH_SHORT).show();\r\n                }\r\n                return;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onConnectionSuspended(int i) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onConnectionFailed(@NonNull ConnectionResult connectionResult) {\r\n\r\n    }\r\n\r\n    public void onLastLocationButtonClicked(View view) {\r\n        // 권한 체크\r\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION}, REQUEST_CODE_PERMISSIONS);\r\n            return;\r\n        }\r\n        mFusedLocationClient.getLastLocation().addOnSuccessListener(this, new OnSuccessListener<Location>() {\r\n            @Override\r\n            public void onSuccess(Location location) {\r\n                if (location != null) {\r\n                    // 현재 위치\r\n                    LatLng myLocation = new LatLng(location.getLatitude(), location.getLongitude());\r\n                    mMap.addMarker(new MarkerOptions()\r\n                            .position(myLocation)\r\n                            .title(\"현재 위치\"));\r\n\r\n                    mMap.moveCamera(CameraUpdateFactory.newLatLng(myLocation));\r\n\r\n                    // 카메라 줌\r\n                    mMap.animateCamera(CameraUpdateFactory.zoomTo(17.0f));\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onPolygonClick(Polygon polygon) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onPolylineClick(Polyline polyline) {\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/leave_a_record/InterfaceActivity/MapsActivity.java	(revision 5533d5691060c9b8596271ff8fdba11553e42c48)
+++ app/src/main/java/com/example/leave_a_record/InterfaceActivity/MapsActivity.java	(date 1603617813499)
@@ -104,6 +104,8 @@
 //        actionBar.setDisplayHomeAsUpEnabled(true);
 
 
+
+
         // GoogleAPIClient의 인스턴스 생성
         if (mGoogleApiClient == null) {
             mGoogleApiClient = new GoogleApiClient.Builder(this)
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_2020-10-24__10_13__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_2020-10-24__10_13__Default_Changelist_.xml
