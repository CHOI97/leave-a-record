Index: app/src/main/java/com/example/leave_a_record/InterfaceActivity/SignupActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.leave_a_record.InterfaceActivity;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.Menu;\r\nimport android.view.MenuInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.leave_a_record.BackPressHandler;\r\n\r\nimport com.example.leave_a_record.DataBase.Callback;\r\nimport com.example.leave_a_record.DataBase.Database_M;\r\nimport com.example.leave_a_record.R;\r\nimport com.example.leave_a_record.DataBase.UserData;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.auth.User;\r\n\r\npublic class SignupActivity extends AppCompatActivity {\r\n    private FirebaseAuth mAuth;\r\n\r\n    private static final String TAG=\"SignupActivity\";\r\n    private static final String TAG2=\"Member Activity\";\r\n    public EditText id, name, pwd,pwd_c;\r\n\r\n    public DatabaseReference mDatabase;\r\n    public FirebaseDatabase database;\r\n    private BackPressHandler backPressHandler = new BackPressHandler(this);\r\n    public Database_M m;\r\n\r\n    Toolbar myToolbar;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.page_sign_up);\r\n//        signTologinActivity();\r\n        FirebaseDatabase database = FirebaseDatabase.getInstance();\r\n        m=new Database_M();\r\n        findViewById(R.id.signup_bt).setOnClickListener(onClickListener);\r\n        findViewById(R.id.signTologin_bt).setOnClickListener(onClickListener);\r\n        id = findViewById(R.id.signup_id);\r\n        name = findViewById(R.id.signup_name);\r\n        pwd = findViewById(R.id.signup_pw);\r\n        pwd_c=findViewById(R.id.signup_pwd);\r\n\r\n\r\n        //toolbar\r\n//        myToolbar = (Toolbar) findViewById(R.id.toolbar);\r\n//        setSupportActionBar(myToolbar);\r\n//        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\r\n//        getSupportActionBar().setDisplayShowTitleEnabled(false);\r\n\r\n    }\r\n\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        //return super.onCreateOptionsMenu(menu);\r\n        MenuInflater menuInflater = getMenuInflater();\r\n        menuInflater.inflate(R.menu.menu, menu);\r\n\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        switch (item.getItemId()) {\r\n            case android.R.id.home: //뒤로가기 버튼\r\n                onBackPressed();\r\n                return true;\r\n        }\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n    View.OnClickListener onClickListener = new View.OnClickListener() {\r\n        @Override\r\n        public void onClick(View v) {\r\n            switch (v.getId()) {\r\n                case R.id.signup_bt:\r\n                    m.signUp(SignupActivity.this,id.getText().toString(),pwd.getText().toString(),name.getText().toString(),pwd_c.getText().toString(),new Callback<Boolean>(){\r\n                        @Override\r\n                        public void onCallback(Boolean data) {\r\n                            if(data){\r\n                                signTologinActivity();\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    break;\r\n                case R.id.signTologin_bt:\r\n                    signTologinActivity();\r\n                    break;\r\n\r\n            }\r\n        }\r\n    };\r\n    //회원가입 확인하기\r\n\r\n    private void goToast(String msg){\r\n        Toast.makeText(this,msg,Toast.LENGTH_SHORT).show();\r\n    }\r\n    private void signTologinActivity(){\r\n\r\n        Intent intent = new Intent (this, LoginActivity.class);\r\n//        Intent intent = new Intent(this, NextActivity.class);\r\n        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n\r\n        startActivity(intent);\r\n\r\n    }\r\n    public void onBackPressed() {\r\n        backPressHandler.onBackPressed(\"뒤로가기 버튼 한번 더 누르면 종료\", 3000);\r\n    }\r\n\r\n//    public void updateUI(FirebaseUser account){\r\n//\r\n//        if(account != null){\r\n//            Toast.makeText(this,\"U Signed In successfully\",Toast.LENGTH_LONG).show();\r\n//            startActivity(new Intent(this,LoginActivity.class));\r\n//\r\n//        }else {\r\n//            Toast.makeText(this,\"U Didnt signed in\",Toast.LENGTH_LONG).show();\r\n//        }\r\n//\r\n//    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/leave_a_record/InterfaceActivity/SignupActivity.java	(revision bb78fb2b4beb8c353ff57354b41720371d5a59eb)
+++ app/src/main/java/com/example/leave_a_record/InterfaceActivity/SignupActivity.java	(date 1608559150588)
@@ -33,109 +33,80 @@
 import com.google.firebase.firestore.auth.User;
 
 public class SignupActivity extends AppCompatActivity {
-    private FirebaseAuth mAuth;
 
-    private static final String TAG="SignupActivity";
-    private static final String TAG2="Member Activity";
-    public EditText id, name, pwd,pwd_c;
-
-    public DatabaseReference mDatabase;
-    public FirebaseDatabase database;
+    public EditText signup_id, signup_name, signup_pwd,signup_pwd_c;
+    public Intent intent;
     private BackPressHandler backPressHandler = new BackPressHandler(this);
     public Database_M m;
 
-    Toolbar myToolbar;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.page_sign_up);
-//        signTologinActivity();
-        FirebaseDatabase database = FirebaseDatabase.getInstance();
         m=new Database_M();
         findViewById(R.id.signup_bt).setOnClickListener(onClickListener);
-        findViewById(R.id.signTologin_bt).setOnClickListener(onClickListener);
-        id = findViewById(R.id.signup_id);
-        name = findViewById(R.id.signup_name);
-        pwd = findViewById(R.id.signup_pw);
-        pwd_c=findViewById(R.id.signup_pwd);
+        findViewById(R.id.SignToLogin_bt).setOnClickListener(onClickListener);
 
-
-        //toolbar
-//        myToolbar = (Toolbar) findViewById(R.id.toolbar);
-//        setSupportActionBar(myToolbar);
-//        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
-//        getSupportActionBar().setDisplayShowTitleEnabled(false);
+        signup_id = findViewById(R.id.signup_id);
+        signup_name = findViewById(R.id.signup_name);
+        signup_pwd = findViewById(R.id.signup_pw);
+        signup_pwd_c=findViewById(R.id.signup_pwd);
+        intent =new Intent(SignupActivity.this, LoginActivity.class);
 
     }
 
     public boolean onCreateOptionsMenu(Menu menu) {
-        //return super.onCreateOptionsMenu(menu);
         MenuInflater menuInflater = getMenuInflater();
         menuInflater.inflate(R.menu.menu, menu);
-
         return true;
     }
 
     @Override
     public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
-            case android.R.id.home: //뒤로가기 버튼
+            case android.R.id.home:
                 onBackPressed();
                 return true;
         }
         return super.onOptionsItemSelected(item);
     }
+
     View.OnClickListener onClickListener = new View.OnClickListener() {
         @Override
         public void onClick(View v) {
             switch (v.getId()) {
                 case R.id.signup_bt:
-                    m.signUp(SignupActivity.this,id.getText().toString(),pwd.getText().toString(),name.getText().toString(),pwd_c.getText().toString(),new Callback<Boolean>(){
-                        @Override
-                        public void onCallback(Boolean data) {
-                            if(data){
-                                signTologinActivity();
-                            }
-                        }
-                    });
-
-                    break;
-                case R.id.signTologin_bt:
-                    signTologinActivity();
-                    break;
-
-            }
-        }
-    };
-    //회원가입 확인하기
-
-    private void goToast(String msg){
-        Toast.makeText(this,msg,Toast.LENGTH_SHORT).show();
-    }
-    private void signTologinActivity(){
-
-        Intent intent = new Intent (this, LoginActivity.class);
-//        Intent intent = new Intent(this, NextActivity.class);
-        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TASK);
-        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
-
-        startActivity(intent);
+                    Signup();
+                    break;
+
+                case R.id.SignToLogin_bt:
+                    startActivity(intent);
+                    break;
+
+            }
+        }
+    };
+    public void Signup(){
+        final String id=signup_id.getText().toString();
+        final String pwd=signup_pwd.getText().toString();
+        final String name=signup_name.getText().toString();
+        final String pwd_c=signup_pwd_c.getText().toString();
+
+        m.getInstance().signUp(SignupActivity.this,id,pwd,name,pwd_c,new Callback<Boolean>(){
+            @Override
+            public void onCallback(Boolean data) {
+                if(data){
+                    startActivity(intent);
+                    Toast.makeText(SignupActivity.this, name+"님 회원가입을 축하합니다.", Toast.LENGTH_SHORT).show();
+                }
+            }
+        });
+
 
     }
+
     public void onBackPressed() {
         backPressHandler.onBackPressed("뒤로가기 버튼 한번 더 누르면 종료", 3000);
     }
-
-//    public void updateUI(FirebaseUser account){
-//
-//        if(account != null){
-//            Toast.makeText(this,"U Signed In successfully",Toast.LENGTH_LONG).show();
-//            startActivity(new Intent(this,LoginActivity.class));
-//
-//        }else {
-//            Toast.makeText(this,"U Didnt signed in",Toast.LENGTH_LONG).show();
-//        }
-//
-//    }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/leave_a_record/BackPressHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.leave_a_record;\r\n\r\nimport android.app.Activity;\r\nimport android.widget.Toast;\r\n\r\n\r\npublic class BackPressHandler {\r\n\r\n    // 마지막으로 뒤로가기 버튼을 눌렀던 시간 저장\r\n    private long backKeyPressedTime = 0;\r\n    // 첫 번째 뒤로가기 버튼을 누를때 표시\r\n    private Toast toast;\r\n    // 종료시킬 Activity\r\n    private Activity activity;\r\n\r\n\r\n    public BackPressHandler(Activity activity) {\r\n        this.activity = activity;\r\n    }\r\n\r\n\r\n    public void onBackPressed() {\r\n        if (System.currentTimeMillis() > backKeyPressedTime + 2000) {\r\n            backKeyPressedTime = System.currentTimeMillis();\r\n            showGuide();\r\n            return;\r\n        }\r\n        if (System.currentTimeMillis() <= backKeyPressedTime + 2000) {\r\n            activity.finish();\r\n            toast.cancel();\r\n        }\r\n    }\r\n\r\n    public void onBackPressed(String msg) {\r\n        if (System.currentTimeMillis() > backKeyPressedTime + 2000) {\r\n            backKeyPressedTime = System.currentTimeMillis();\r\n            showGuide(msg);\r\n            return;\r\n        }\r\n        if (System.currentTimeMillis() <= backKeyPressedTime + 2000) {\r\n            activity.finish();\r\n            toast.cancel();\r\n        }\r\n    }\r\n\r\n\r\n    public void onBackPressed(int time) {\r\n        if (System.currentTimeMillis() > backKeyPressedTime + time) {\r\n\r\n\r\n\r\n            backKeyPressedTime = System.currentTimeMillis();\r\n            showGuide();\r\n            return;\r\n        }\r\n        if (System.currentTimeMillis() <= backKeyPressedTime + time) {\r\n            activity.finish();\r\n            toast.cancel();\r\n        }\r\n    }\r\n\r\n\r\n    public void onBackPressed(String msg, int time) {\r\n        if (System.currentTimeMillis() > backKeyPressedTime + time) {\r\n            backKeyPressedTime = System.currentTimeMillis();\r\n            showGuide(msg);\r\n            return;\r\n        }\r\n        if (System.currentTimeMillis() <= backKeyPressedTime + time) {\r\n            activity.finish();\r\n            toast.cancel();\r\n        }\r\n    }\r\n\r\n\r\n    private void showGuide() {\r\n        toast = Toast.makeText(activity, \"\\'뒤로\\' 버튼을 한번 더 누르시면 종료됩니다.\", Toast.LENGTH_SHORT);\r\n        toast.show();\r\n    }\r\n\r\n\r\n    private void showGuide(String msg) {\r\n        toast = Toast.makeText(activity, msg, Toast.LENGTH_SHORT);\r\n        toast.show();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/leave_a_record/BackPressHandler.java	(revision bb78fb2b4beb8c353ff57354b41720371d5a59eb)
+++ app/src/main/java/com/example/leave_a_record/BackPressHandler.java	(date 1608546481105)
@@ -13,12 +13,9 @@
     // 종료시킬 Activity
     private Activity activity;
 
-
     public BackPressHandler(Activity activity) {
         this.activity = activity;
     }
-
-
     public void onBackPressed() {
         if (System.currentTimeMillis() > backKeyPressedTime + 2000) {
             backKeyPressedTime = System.currentTimeMillis();
@@ -42,18 +39,13 @@
             toast.cancel();
         }
     }
-
-
     public void onBackPressed(int time) {
-        if (System.currentTimeMillis() > backKeyPressedTime + time) {
-
-
-
+        if (System.currentTimeMillis() > backKeyPressedTime + time){
             backKeyPressedTime = System.currentTimeMillis();
             showGuide();
             return;
         }
-        if (System.currentTimeMillis() <= backKeyPressedTime + time) {
+        if (System.currentTimeMillis() <= backKeyPressedTime + time){
             activity.finish();
             toast.cancel();
         }
@@ -61,24 +53,21 @@
 
 
     public void onBackPressed(String msg, int time) {
-        if (System.currentTimeMillis() > backKeyPressedTime + time) {
+        if (System.currentTimeMillis() > backKeyPressedTime + time){
             backKeyPressedTime = System.currentTimeMillis();
             showGuide(msg);
             return;
         }
-        if (System.currentTimeMillis() <= backKeyPressedTime + time) {
+        if (System.currentTimeMillis() <= backKeyPressedTime + time){
             activity.finish();
             toast.cancel();
         }
     }
 
-
     private void showGuide() {
         toast = Toast.makeText(activity, "\'뒤로\' 버튼을 한번 더 누르시면 종료됩니다.", Toast.LENGTH_SHORT);
         toast.show();
     }
-
-
     private void showGuide(String msg) {
         toast = Toast.makeText(activity, msg, Toast.LENGTH_SHORT);
         toast.show();
Index: app/src/main/java/com/example/leave_a_record/InterfaceActivity/LoginActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.leave_a_record.InterfaceActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.EditText;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.leave_a_record.DataBase.Callback;\r\nimport com.example.leave_a_record.R;\r\nimport com.example.leave_a_record.DataBase.Database_M;\r\n\r\npublic class LoginActivity extends AppCompatActivity {\r\n\r\n    Database_M m;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.page_login);\r\n        findViewById(R.id.login_bt).setOnClickListener(onClickListener);\r\n        findViewById(R.id.loginTosignup_bt).setOnClickListener(onClickListener);\r\n        m=new Database_M();\r\n\r\n\r\n    }\r\n\r\n    View.OnClickListener onClickListener = new View.OnClickListener() {\r\n        @Override\r\n        public void onClick(View v) {\r\n            switch (v.getId()) {\r\n                case R.id.login_bt:\r\n                    signIn();\r\n                    break;\r\n                case R.id.loginTosignup_bt:\r\n                    loginTosignup();\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    private void signIn() {\r\n        final String email = ((EditText) findViewById(R.id.login_id)).getText().toString();\r\n        final String password = ((EditText) findViewById(R.id.login_pw)).getText().toString();\r\n        // 로그인 인증하기\r\n        Database_M.getInstance().SignInEmail(this,email,password\r\n                , new Callback<Boolean>() {\r\n                    @Override\r\n                    public void onCallback(Boolean data) {\r\n                        // 로그인 작업 성공\r\n                        if(data) {\r\n                            Intent intent;\r\n                            intent = new Intent(LoginActivity.this,MainActivity.class);\r\n                            //ProfileActivity로 이동\r\n                            finish();\r\n                            startActivity(intent);\r\n\r\n                        }\r\n\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void loginTosignup() {\r\n        Intent intent = new Intent(LoginActivity.this , SignupActivity.class);\r\n        finish();\r\n        startActivity(intent);\r\n\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/leave_a_record/InterfaceActivity/LoginActivity.java	(revision bb78fb2b4beb8c353ff57354b41720371d5a59eb)
+++ app/src/main/java/com/example/leave_a_record/InterfaceActivity/LoginActivity.java	(date 1608559037339)
@@ -12,14 +12,18 @@
 import com.example.leave_a_record.DataBase.Database_M;
 
 public class LoginActivity extends AppCompatActivity {
-
+    EditText id,pw;
     Database_M m;
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.page_login);
+
+        id=findViewById(R.id.login_id);
+        pw=findViewById(R.id.login_pw);
+
         findViewById(R.id.login_bt).setOnClickListener(onClickListener);
-        findViewById(R.id.loginTosignup_bt).setOnClickListener(onClickListener);
+        findViewById(R.id.loginToSignup_bt).setOnClickListener(onClickListener);
         m=new Database_M();
 
 
@@ -30,21 +34,23 @@
         public void onClick(View v) {
             switch (v.getId()) {
                 case R.id.login_bt:
-                    signIn();
+                    SignIn();
                     break;
-                case R.id.loginTosignup_bt:
-                    loginTosignup();
+                case R.id.loginToSignup_bt:
+                    Intent intent = new Intent(LoginActivity.this , SignupActivity.class);
+                    finish();
+                    startActivity(intent);
                     break;
             }
         }
     };
 
 
-    private void signIn() {
-        final String email = ((EditText) findViewById(R.id.login_id)).getText().toString();
-        final String password = ((EditText) findViewById(R.id.login_pw)).getText().toString();
+    private void SignIn() {
+        final String email = id.getText().toString();
+        final String password = pw.getText().toString();
         // 로그인 인증하기
-        Database_M.getInstance().SignInEmail(this,email,password
+        m.getInstance().SignInEmail(this,email,password
                 , new Callback<Boolean>() {
                     @Override
                     public void onCallback(Boolean data) {
@@ -55,18 +61,8 @@
                             //ProfileActivity로 이동
                             finish();
                             startActivity(intent);
-
-                        }
-
-                    }
-                });
-    }
-
-    private void loginTosignup() {
-        Intent intent = new Intent(LoginActivity.this , SignupActivity.class);
-        finish();
-        startActivity(intent);
-
-
+                        }
+                    }
+                });
     }
 }
Index: app/src/main/java/com/example/leave_a_record/InterfaceActivity/ProfileActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.leave_a_record.InterfaceActivity;\r\n\r\nimport android.Manifest;\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.content.ClipData;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.database.Cursor;\r\nimport android.graphics.Color;\r\nimport android.media.ExifInterface;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport android.provider.Settings;\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.Menu;\r\nimport android.view.MenuInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentTransaction;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.example.leave_a_record.BackPressHandler;\r\n\r\nimport com.example.leave_a_record.DataBase.Callback;\r\nimport com.example.leave_a_record.DataBase.Database_M;\r\nimport com.example.leave_a_record.R;\r\nimport com.example.leave_a_record.fragment.myHistory;\r\nimport com.example.leave_a_record.fragment.tripCourse;\r\nimport com.example.leave_a_record.post_data_image;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.makeramen.roundedimageview.RoundedImageView;\r\n\r\nimport java.util.ArrayList;\r\n\r\nimport de.hdodenhof.circleimageview.CircleImageView;\r\n\r\npublic class ProfileActivity extends AppCompatActivity {\r\n    private LinearLayout txt_myHistory, txt_tripCourse; // 내 기록, 여행코스 메뉴버튼을 제어하기 위한 변수\r\n    private LinearLayout fragment_layout;        // 바뀌는 화면을 담당할 변수\r\n\r\n    private FragmentManager fragmentManager;            // Framgent 매니저 클래스 변수\r\n    private FragmentTransaction fragmentTransaction;    // Fragment 트랜잭션클래스 변수\\\r\n    private TextView Textname,Textabout;\r\n    private FirebaseAuth mAuth;\r\n    public ArrayList<post_data_image> pd_datas;\r\n    private BackPressHandler backPressHandler = new BackPressHandler(this);\r\n    private Database_M m;\r\n    private RoundedImageView profile_image;\r\n\r\n    public static final int MY_PERMISSIONS_REQUEST_READ_EXTERNAL_STORAGE = 123;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        Log.d(\"현재 진행중인 것은\", \"------------프로필페이지.\");\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.page_profile);\r\n\r\n//        checkSystemPermission();\r\n        txt_myHistory = findViewById(R.id.txt_myHistory);\r\n        txt_tripCourse = findViewById(R.id.txt_tripCourse);\r\n        fragment_layout = findViewById(R.id.fragment_layout);\r\n        profile_image=findViewById(R.id.img_profile);\r\n        mAuth = FirebaseAuth.getInstance();\r\n        Textname= findViewById(R.id.text_username);\r\n        Textabout=findViewById(R.id.text_about1);\r\n        m=new Database_M();\r\n\r\n\r\n\r\n        Log.d(\"지금 로그인중인 아이디\", mAuth.getCurrentUser().getUid());\r\n\r\n        //toolbar\r\n        Toolbar toolbar =findViewById(R.id.toolbar);\r\n\r\n        setSupportActionBar(toolbar);\r\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);//뒤로가기\r\n        getSupportActionBar().setDisplayShowTitleEnabled(false);\r\n\r\n\r\n        //유저 프로필 이미지 동기화\r\n        m.SingleImageUri(m.getmAuth().getUid(), new Callback<Uri>() {\r\n            @Override\r\n            public void onCallback(Uri data) {\r\n                if(!data.equals(null)){\r\n                    Glide.with(ProfileActivity.this).load(data).override(200,200).centerCrop().into(profile_image);\r\n                }\r\n                else{\r\n                    Log.d(\"현재 이 아이디의 프로필사진은\",\" 없습니다\");\r\n                }\r\n\r\n            }\r\n        });\r\n        //이름 동기화\r\n        m.userName(new Callback<String>() {\r\n            @Override\r\n            public void onCallback(String data) {\r\n                Textname.setText(data);\r\n            }\r\n        });\r\n        //상태메세지 동기화\r\n        m.userAbout(new Callback<String>() {\r\n            @Override\r\n            public void onCallback(String data) {\r\n                Textabout.setText(data);\r\n            }\r\n        });\r\n\r\n//        img_add.setOnClickListener(new View.OnClickListener() {\r\n//            @Override\r\n//            public void onClick(View v) {\r\n//                Log.d(\"현재 진행중인 것은\", \"-------------갤러리로 넘기는중입니다.\");\r\n//                Intent intent = new Intent(Intent.ACTION_PICK, MediaStore.Audio.Media.EXTERNAL_CONTENT_URI);\r\n//                //사진을 여러개 선택할수 있도록 한다\r\n//                intent.putExtra(Intent.EXTRA_ALLOW_MULTIPLE, true);\r\n//                intent.setType(\"image/*\");\r\n//                intent.setAction(Intent.ACTION_GET_CONTENT);\r\n//                startActivityForResult(Intent.createChooser(intent, \"Select Picture\"), 101);\r\n//            }\r\n//        });\r\n\r\n//        GridView gridView = (GridView)findViewById(R.id.gridview);\r\n//        gridView.setAdapter(new HistoryListAdapter(this,));\r\n\r\n        txt_myHistory.setOnClickListener(new menuClickListener());\r\n        txt_tripCourse.setOnClickListener(new menuClickListener());\r\n        //--------------- 메뉴 팝업 부분 -----------------//\r\n//        img_more.setOnClickListener(new View.OnClickListener() {\r\n//\r\n//            @Override\r\n//            public void onClick(View v) {\r\n//                Log.d(\"팝업메뉴\",\"=======눌렸음.\");\r\n//                PopupMenu popup= new PopupMenu(getApplicationContext(), v);//v는 클릭된 뷰를 의미\r\n//                Log.d(\"팝업메뉴\",\"=======생성중\");\r\n//                getMenuInflater().inflate(R.menu.menu_all, popup.getMenu());\r\n//                popup.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() {\r\n//                    @Override\r\n//                    public boolean onMenuItemClick(MenuItem item) {\r\n//                        switch (item.getItemId()){\r\n//                            case R.id.Logout:\r\n//                                Toast.makeText(getApplication(),\"로그아웃\",Toast.LENGTH_SHORT).show();\r\n//                                break;\r\n//                            case R.id.settings:\r\n//                                Toast.makeText(getApplication(),\"설정\",Toast.LENGTH_SHORT).show();\r\n//                                break;\r\n//                            default:\r\n//                                break;\r\n//                        }\r\n//                        return false;\r\n//                    }\r\n//                });\r\n//\r\n//            }\r\n//        });\r\n\r\n\r\n\r\n//       img_add.setOnClickListener(new View.OnClickListener() {\r\n//            @Override\r\n//            public void onClick(View v) {\r\n//                Log.d(\"현재 진행중인 것은\", \"-------------갤러리로 넘기는중입니다.\");\r\n//                Intent intent = new Intent(Intent.ACTION_PICK, MediaStore.Audio.Media.EXTERNAL_CONTENT_URI);\r\n//                //사진을 여러개 선택할수 있도록 한다\r\n//                intent.putExtra(Intent.EXTRA_ALLOW_MULTIPLE, true);\r\n//                intent.setType(\"image/*\");\r\n//                intent.setAction(Intent.ACTION_GET_CONTENT);\r\n//                startActivityForResult(Intent.createChooser(intent, \"Select Picture\"), 101);\r\n//            }\r\n//        });\r\n\r\n\r\n        // Fragment 정보 초기화\r\n        fragmentManager = getSupportFragmentManager();\r\n        fragmentTransaction = fragmentManager.beginTransaction();\r\n\r\n        // \"내 기록\" Fragment 먼저 보여줌\r\n        tripCourse fragment1 = new tripCourse();\r\n        fragmentTransaction.replace(R.id.fragment_layout, fragment1).commitAllowingStateLoss();\r\n\r\n    }\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        //return super.onCreateOptionsMenu(menu);\r\n        MenuInflater menuInflater = getMenuInflater();\r\n        menuInflater.inflate(R.menu.menu_profile, menu);\r\n\r\n        return true;\r\n    }\r\n//    @Override public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\r\n//        if(requestCode == 1){\r\n//            int length = permissions.length;\r\n//            for (int i = 0; i < length; i++) {\r\n//                if (grantResults[i] == PackageManager.PERMISSION_GRANTED)\r\n//                { // 동의\r\n//                    Log.d(\"MainActivity\",\"권한 허용 : \" + permissions[i]);\r\n//                }\r\n//            }\r\n//        }\r\n//    }\r\n\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        switch (item.getItemId()) {\r\n            case android.R.id.home: //뒤로가기 버튼\r\n                onBackPressed();\r\n                return true;\r\n            case R.id.tool_image:\r\n                if (checkPermissionREAD_EXTERNAL_STORAGE(this)) {\r\n                    Intent intent = new Intent(Intent. ACTION_GET_CONTENT , android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);\r\n//                //사진을 여러개 선택할수 있도록 한다\r\n                    intent.putExtra(Intent.EXTRA_ALLOW_MULTIPLE, true);\r\n                    intent.setType(\"image/*\");\r\n                    intent.setAction(Intent.ACTION_GET_CONTENT);\r\n                    startActivityForResult(Intent.createChooser(intent, \"Select Picture\"), 101);\r\n                    break;\r\n                }\r\n\r\n            case R.id.tool_edit:\r\n                Intent intent_edit;\r\n                intent_edit=new Intent(ProfileActivity.this,Edit_ProfileActivity.class);\r\n                startActivity(intent_edit);\r\n                break;\r\n            case R.id.tool_logout:\r\n                m.SignOut();\r\n                Intent intent_logout=new Intent(ProfileActivity.this,LoginActivity.class);\r\n                finish();\r\n                startActivity(intent_logout);\r\n                goToast(\"로그아웃 되었습니다.\");\r\n                break;\r\n        }\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n\r\n//    public void onStart() {\r\n//        super.onStart();\r\n//        // Check if user is signed in (non-null) and update UI accordingly.\r\n//        FirebaseUser currentUser = mAuth.getCurrentUser();\r\n//    }\r\n\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        ExifInterface exif;\r\n        Intent intent;\r\n        Uri urione;\r\n        if (requestCode == 101) {\r\n            if (resultCode == RESULT_OK) {\r\n                Uri uri = data.getData(); //-----------이게 필요한가?..\r\n                ClipData clipData = data.getClipData();\r\n//                pd_data=new post_data_image[clipData.getItemCount()];-------일단보류\r\n\r\n\r\n//               try{            -------------------------------보류중 오류없음.\r\n//                    pd_datas = new ArrayList<post_data_image>(clipData.getItemCount());\r\n//                }\r\n//                catch(Exception e){\r\n//                    e.printStackTrace();\r\n//                }\r\n                pd_datas = new ArrayList<post_data_image>();\r\n                //이미지 URI 를 이용하여 이미지뷰에 순서대로 세팅한다.\r\n                if (clipData != null) {\r\n\r\n                    for (int i = 0; i < clipData.getItemCount(); i++) {\r\n                        if (i < clipData.getItemCount()) {\r\n                            try {\r\n                                urione = clipData.getItemAt(i).getUri();\r\n                                exif = new ExifInterface(getPath(urione));\r\n                                pd_datas.add(new post_data_image(urione.toString(), getDateTime(exif),getGPS_Latitude(exif),getGps_Longitude(exif)));\r\n//                                arr_uri.add(urione);\r\n//                                arr_date.add(getDateTime(exif));\r\n//                                pd_data[i].setUri(urione);\r\n//                                pd_data[i].setDate_time(getDateTime(exif));\r\n\r\n                            } catch (Exception e) {\r\n                                e.printStackTrace();\r\n                            }\r\n                        }\r\n                    }\r\n                    Log.d(\"현재 진행중인 것은\", \"인텐트로 넘기기전입니다.\");\r\n                    intent = new Intent(this, EditActivity.class);\r\n//                    intent.putExtra(\"image-data\",pd_datas);\r\n//                    for(int j=0;j<pd_data.length;j++) {\r\n//                        to_edit.putExtra(\"image data - Uri\", arr_uri);\r\n//                        to_edit.putExtra(\"image data - date\",arr_date);\r\n//                    }\r\n                    intent.putExtra(\"pd_datas\", pd_datas);\r\n                    Log.d(\"현재 진행중인 것은\", \"인텐트로 넘기기전입니다.\");\r\n\r\n                    startActivity(intent);\r\n                } else if (uri != null) {\r\n                    try {\r\n                        goToast(\"여러장의 이미지를 선택해주세요\");  // 일단 여러이미지만 받는걸로 수정.\r\n\r\n                    } catch (Exception e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n    public boolean checkPermissionREAD_EXTERNAL_STORAGE(\r\n            final Context context) {\r\n        int currentAPIVersion = Build.VERSION.SDK_INT;\r\n        if (currentAPIVersion >= android.os.Build.VERSION_CODES.M) {\r\n            if (ContextCompat.checkSelfPermission(context,\r\n                    Manifest.permission.READ_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\r\n                if (ActivityCompat.shouldShowRequestPermissionRationale(\r\n                        (Activity) context,\r\n                        Manifest.permission.READ_EXTERNAL_STORAGE)) {\r\n                    showDialog(\"External storage\", context,\r\n                            Manifest.permission.READ_EXTERNAL_STORAGE);\r\n\r\n                } else {\r\n                    ActivityCompat\r\n                            .requestPermissions(\r\n                                    (Activity) context,\r\n                                    new String[] { Manifest.permission.READ_EXTERNAL_STORAGE },\r\n                                    MY_PERMISSIONS_REQUEST_READ_EXTERNAL_STORAGE);\r\n                }\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n    public void showDialog(final String msg, final Context context,\r\n                           final String permission) {\r\n        AlertDialog.Builder alertBuilder = new AlertDialog.Builder(context);\r\n        alertBuilder.setCancelable(true);\r\n        alertBuilder.setTitle(\"Permission necessary\");\r\n        alertBuilder.setMessage(msg + \" permission is necessary\");\r\n        alertBuilder.setPositiveButton(android.R.string.yes,\r\n                new DialogInterface.OnClickListener() {\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        ActivityCompat.requestPermissions((Activity) context,\r\n                                new String[] { permission },\r\n                                MY_PERMISSIONS_REQUEST_READ_EXTERNAL_STORAGE);\r\n                    }\r\n                });\r\n        AlertDialog alert = alertBuilder.create();\r\n        alert.show();\r\n    }\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode,\r\n                                           String[] permissions, int[] grantResults) {\r\n        switch (requestCode) {\r\n            case MY_PERMISSIONS_REQUEST_READ_EXTERNAL_STORAGE:\r\n                if (grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n                    // do your stuff\r\n                } else {\r\n                    Toast.makeText(ProfileActivity.this, \"GET_ACCOUNTS Denied\",\r\n                            Toast.LENGTH_SHORT).show();\r\n                }\r\n                break;\r\n            default:\r\n                super.onRequestPermissionsResult(requestCode, permissions,\r\n                        grantResults);\r\n        }\r\n    }\r\n    private String getDateTime(ExifInterface exif) {\r\n        String Datetime = getTagString(ExifInterface.TAG_DATETIME_ORIGINAL, exif);\r\n        return Datetime;\r\n    }\r\n\r\n    private String getTagString(String tag, ExifInterface exif) {\r\n        return (exif.getAttribute(tag) + \"\\n\");\r\n    }\r\n\r\n    private String getPath(Uri uri) {\r\n\r\n        Cursor cursor = getContentResolver().query(uri, null, null, null, null);\r\n        String path = null;\r\n        if (cursor != null) {\r\n            if (cursor.moveToFirst()) {\r\n                String document_id = cursor.getString(0);\r\n                document_id = document_id.substring(document_id.lastIndexOf(\":\") + 1);\r\n                cursor.close();\r\n                cursor = getContentResolver().query(\r\n                        MediaStore.Images.Media.EXTERNAL_CONTENT_URI,\r\n                        null, MediaStore.Images.Media._ID + \" = ? \", new String[]{document_id}, null);\r\n                cursor.moveToFirst();\r\n                path = cursor.getString(cursor.getColumnIndex(MediaStore.Images.Media.DATA));\r\n                cursor.close();\r\n                return path;\r\n            }\r\n        }\r\n        return path;\r\n    }\r\n\r\n    // 내 기록, 여행코스를 눌렀을때 이벤트 리스너\r\n    private class menuClickListener implements View.OnClickListener {\r\n        @Override\r\n        public void onClick(View view) {\r\n            fragmentTransaction = fragmentManager.beginTransaction();\r\n            // Fragment 정보 초기화\r\n            switch (view.getId()) {\r\n                // 내 기록을 눌렀을때\r\n                case R.id.txt_myHistory:\r\n                    // 1. Fragment를 대체하고\r\n                    myHistory fragment1 = new myHistory();\r\n                    fragmentTransaction.replace(R.id.fragment_layout, fragment1).commitAllowingStateLoss();\r\n\r\n                    // 2. 밑줄을 생성\r\n                    txt_myHistory.setBackground(ContextCompat.getDrawable(ProfileActivity.this, R.drawable.border));\r\n                    txt_tripCourse.setBackgroundColor(Color.parseColor(\"#ffffff\"));\r\n                    break;\r\n//                 코스여행을 눌렀을때\r\n                case R.id.txt_tripCourse:\r\n                    // 1. Fragment를 대체하고\r\n                    txt_myHistory.setBackgroundColor(Color.parseColor(\"#ffffff\"));\r\n                    txt_tripCourse.setBackground(ContextCompat.getDrawable(ProfileActivity.this, R.drawable.border));\r\n\r\n                    // 2. 밑줄을 생성\r\n                    tripCourse fragment2 = new tripCourse();\r\n                    Log.d(\"success\", \"tripCourse case:success\"); //로그찍기\r\n                    fragmentTransaction.replace(R.id.fragment_layout, fragment2).commitAllowingStateLoss();\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    public void checkSelfPermission(){\r\n        String temp=\" \";\r\n        if(ContextCompat.checkSelfPermission(this,\r\n                Manifest.permission.READ_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED){\r\n            temp += Manifest.permission.READ_EXTERNAL_STORAGE + \" \";\r\n        }\r\n\r\n        if (ContextCompat.checkSelfPermission(this,\r\n                Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\r\n            temp += Manifest.permission.WRITE_EXTERNAL_STORAGE + \" \";\r\n        }\r\n        if (TextUtils.isEmpty(temp) == false) {\r\n            ActivityCompat.requestPermissions(this, temp.trim().split(\" \"),1);\r\n        }\r\n        else {\r\n            Toast.makeText(this, \"권한을 모두 허용\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n//    @Override\r\n//    public boolean onOptionsItemSelected(MenuItem item) {\r\n//        switch (item.getItemId()) {\r\n//            case android.R.id.home: //뒤로가기 버튼\r\n//                onBackPressed();\r\n//                return true;\r\n//\r\n//            case R.id.tool_edit: //수정하기 버튼\r\n//\r\n//            case R.id.tool_add: //추가하기 버튼\r\n//\r\n//            case R.id.tool_logout: //로그아웃 버튼\r\n//        }\r\n//        return super.onOptionsItemSelected(item);\r\n//    }\r\n//\r\n//    public boolean onCreateOptionsMenu(Menu menu) {\r\n//        MenuInflater menuInflater = getMenuInflater();\r\n//        menuInflater.inflate(R.menu.menu_profile, menu);\r\n//        return super.onCreateOptionsMenu(menu);\r\n//    }\r\n\r\n    public boolean checkSystemPermission() {\r\n\r\n        boolean permission = true;\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {   //23버전 이상\r\n            permission = Settings.System.canWrite(this);\r\n            Log.d(\"test\", \"Can Write Settings: \" + permission);\r\n            if(permission){\r\n                Log.e(\"test\", \"허용\");\r\n            }else{\r\n                Log.e(\"test\", \"불허용\");\r\n                Intent intent = new Intent(android.provider.Settings.ACTION_MANAGE_WRITE_SETTINGS);\r\n                intent.setData(Uri.parse(\"package:\" + getPackageName()));\r\n                startActivityForResult(intent, 2127);\r\n                permission = false;\r\n            }\r\n        } else {\r\n\r\n        }\r\n\r\n        return permission;\r\n    }\r\n\r\n\r\n\r\n\r\n    private void goToast(String msg) {\r\n        Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();\r\n    }\r\n\r\n    private String getGPS_Latitude(ExifInterface exif) {\r\n        String Latitude =getTagString(ExifInterface.TAG_GPS_LATITUDE, exif);\r\n        String Longitude= getTagString(ExifInterface.TAG_GPS_LONGITUDE, exif);\r\n//        String Datetime = getTagString(ExifInterface.TAG_DATETIME_ORIGINAL,exif);\r\n        return  gps_conventer(Latitude);\r\n    }\r\n    private String getGps_Longitude(ExifInterface exif){\r\n        String Longitude= getTagString(ExifInterface.TAG_GPS_LONGITUDE, exif);\r\n        return gps_conventer(Longitude);\r\n    }\r\n\r\n\r\n    public String gps_conventer(String tag){\r\n        String s1 =tag;\r\n        String s2;\r\n        String[] s3;\r\n        double StrTemp=0;\r\n        String result; //반환\r\n\r\n        s2 = s1.replace(\"/1,\",\".\");\r\n        tag = s2.replace (\"/100\",\"\");//문자열 필요없는 부분삭제\r\n\r\n\r\n        s3=tag.split(\"\\\\.\");//문자열 분리 각 배열 3개의 각각 들어있음\r\n\r\n        // dms to dd\r\n        StrTemp+=Double.parseDouble(s3[0]);\r\n        StrTemp+=(Double.parseDouble(s3[1]))/60;\r\n        StrTemp+=(Double.parseDouble(s3[2]))/360000;\r\n\r\n        result =(String.format(\"%.5f\",StrTemp)); //Double to String\r\n        return result;\r\n    }\r\n    public void onBackPressed() {\r\n        backPressHandler.onBackPressed(\"뒤로가기 버튼 한번 더 누르면 종료\", 3000);\r\n    }\r\n//    public String time_conventer(String tag){\r\n//        String s1 =tag;\r\n//\r\n//        tag = s1.replaceAll(\"[^0-9}]\",\" \");//문자열 필요없는 부분삭제\r\n//\r\n//        return tag;\r\n//    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/leave_a_record/InterfaceActivity/ProfileActivity.java	(revision bb78fb2b4beb8c353ff57354b41720371d5a59eb)
+++ app/src/main/java/com/example/leave_a_record/InterfaceActivity/ProfileActivity.java	(date 1609148726811)
@@ -112,6 +112,7 @@
                 Textname.setText(data);
             }
         });
+
         //상태메세지 동기화
         m.userAbout(new Callback<String>() {
             @Override
@@ -120,68 +121,8 @@
             }
         });
 
-//        img_add.setOnClickListener(new View.OnClickListener() {
-//            @Override
-//            public void onClick(View v) {
-//                Log.d("현재 진행중인 것은", "-------------갤러리로 넘기는중입니다.");
-//                Intent intent = new Intent(Intent.ACTION_PICK, MediaStore.Audio.Media.EXTERNAL_CONTENT_URI);
-//                //사진을 여러개 선택할수 있도록 한다
-//                intent.putExtra(Intent.EXTRA_ALLOW_MULTIPLE, true);
-//                intent.setType("image/*");
-//                intent.setAction(Intent.ACTION_GET_CONTENT);
-//                startActivityForResult(Intent.createChooser(intent, "Select Picture"), 101);
-//            }
-//        });
-
-//        GridView gridView = (GridView)findViewById(R.id.gridview);
-//        gridView.setAdapter(new HistoryListAdapter(this,));
-
         txt_myHistory.setOnClickListener(new menuClickListener());
         txt_tripCourse.setOnClickListener(new menuClickListener());
-        //--------------- 메뉴 팝업 부분 -----------------//
-//        img_more.setOnClickListener(new View.OnClickListener() {
-//
-//            @Override
-//            public void onClick(View v) {
-//                Log.d("팝업메뉴","=======눌렸음.");
-//                PopupMenu popup= new PopupMenu(getApplicationContext(), v);//v는 클릭된 뷰를 의미
-//                Log.d("팝업메뉴","=======생성중");
-//                getMenuInflater().inflate(R.menu.menu_all, popup.getMenu());
-//                popup.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() {
-//                    @Override
-//                    public boolean onMenuItemClick(MenuItem item) {
-//                        switch (item.getItemId()){
-//                            case R.id.Logout:
-//                                Toast.makeText(getApplication(),"로그아웃",Toast.LENGTH_SHORT).show();
-//                                break;
-//                            case R.id.settings:
-//                                Toast.makeText(getApplication(),"설정",Toast.LENGTH_SHORT).show();
-//                                break;
-//                            default:
-//                                break;
-//                        }
-//                        return false;
-//                    }
-//                });
-//
-//            }
-//        });
-
-
-
-//       img_add.setOnClickListener(new View.OnClickListener() {
-//            @Override
-//            public void onClick(View v) {
-//                Log.d("현재 진행중인 것은", "-------------갤러리로 넘기는중입니다.");
-//                Intent intent = new Intent(Intent.ACTION_PICK, MediaStore.Audio.Media.EXTERNAL_CONTENT_URI);
-//                //사진을 여러개 선택할수 있도록 한다
-//                intent.putExtra(Intent.EXTRA_ALLOW_MULTIPLE, true);
-//                intent.setType("image/*");
-//                intent.setAction(Intent.ACTION_GET_CONTENT);
-//                startActivityForResult(Intent.createChooser(intent, "Select Picture"), 101);
-//            }
-//        });
-
 
         // Fragment 정보 초기화
         fragmentManager = getSupportFragmentManager();
@@ -199,19 +140,6 @@
 
         return true;
     }
-//    @Override public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {
-//        if(requestCode == 1){
-//            int length = permissions.length;
-//            for (int i = 0; i < length; i++) {
-//                if (grantResults[i] == PackageManager.PERMISSION_GRANTED)
-//                { // 동의
-//                    Log.d("MainActivity","권한 허용 : " + permissions[i]);
-//                }
-//            }
-//        }
-//    }
-
-
     @Override
     public boolean onOptionsItemSelected(MenuItem item) {
         switch (item.getItemId()) {
@@ -246,11 +174,6 @@
     }
 
 
-//    public void onStart() {
-//        super.onStart();
-//        // Check if user is signed in (non-null) and update UI accordingly.
-//        FirebaseUser currentUser = mAuth.getCurrentUser();
-//    }
 
     protected void onActivityResult(int requestCode, int resultCode, Intent data) {
         super.onActivityResult(requestCode, resultCode, data);
@@ -261,30 +184,17 @@
             if (resultCode == RESULT_OK) {
                 Uri uri = data.getData(); //-----------이게 필요한가?..
                 ClipData clipData = data.getClipData();
-//                pd_data=new post_data_image[clipData.getItemCount()];-------일단보류
 
-
-//               try{            -------------------------------보류중 오류없음.
-//                    pd_datas = new ArrayList<post_data_image>(clipData.getItemCount());
-//                }
-//                catch(Exception e){
-//                    e.printStackTrace();
-//                }
                 pd_datas = new ArrayList<post_data_image>();
                 //이미지 URI 를 이용하여 이미지뷰에 순서대로 세팅한다.
                 if (clipData != null) {
-
+    // 이미지의 메타데이터가 없는경우도 받아야한다.
                     for (int i = 0; i < clipData.getItemCount(); i++) {
                         if (i < clipData.getItemCount()) {
                             try {
                                 urione = clipData.getItemAt(i).getUri();
                                 exif = new ExifInterface(getPath(urione));
                                 pd_datas.add(new post_data_image(urione.toString(), getDateTime(exif),getGPS_Latitude(exif),getGps_Longitude(exif)));
-//                                arr_uri.add(urione);
-//                                arr_date.add(getDateTime(exif));
-//                                pd_data[i].setUri(urione);
-//                                pd_data[i].setDate_time(getDateTime(exif));
-
                             } catch (Exception e) {
                                 e.printStackTrace();
                             }
@@ -292,11 +202,6 @@
                     }
                     Log.d("현재 진행중인 것은", "인텐트로 넘기기전입니다.");
                     intent = new Intent(this, EditActivity.class);
-//                    intent.putExtra("image-data",pd_datas);
-//                    for(int j=0;j<pd_data.length;j++) {
-//                        to_edit.putExtra("image data - Uri", arr_uri);
-//                        to_edit.putExtra("image data - date",arr_date);
-//                    }
                     intent.putExtra("pd_datas", pd_datas);
                     Log.d("현재 진행중인 것은", "인텐트로 넘기기전입니다.");
 
@@ -456,27 +361,6 @@
             Toast.makeText(this, "권한을 모두 허용", Toast.LENGTH_SHORT).show();
         }
     }
-//    @Override
-//    public boolean onOptionsItemSelected(MenuItem item) {
-//        switch (item.getItemId()) {
-//            case android.R.id.home: //뒤로가기 버튼
-//                onBackPressed();
-//                return true;
-//
-//            case R.id.tool_edit: //수정하기 버튼
-//
-//            case R.id.tool_add: //추가하기 버튼
-//
-//            case R.id.tool_logout: //로그아웃 버튼
-//        }
-//        return super.onOptionsItemSelected(item);
-//    }
-//
-//    public boolean onCreateOptionsMenu(Menu menu) {
-//        MenuInflater menuInflater = getMenuInflater();
-//        menuInflater.inflate(R.menu.menu_profile, menu);
-//        return super.onCreateOptionsMenu(menu);
-//    }
 
     public boolean checkSystemPermission() {
 
@@ -543,12 +427,5 @@
     public void onBackPressed() {
         backPressHandler.onBackPressed("뒤로가기 버튼 한번 더 누르면 종료", 3000);
     }
-//    public String time_conventer(String tag){
-//        String s1 =tag;
-//
-//        tag = s1.replaceAll("[^0-9}]"," ");//문자열 필요없는 부분삭제
-//
-//        return tag;
-//    }
 }
 
Index: app/src/main/java/com/example/leave_a_record/InterfaceActivity/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.leave_a_record.InterfaceActivity;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.ImageButton;\r\nimport android.widget.Switch;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.leave_a_record.DataBase.Callback;\r\nimport com.example.leave_a_record.DataBase.Database_M;\r\nimport com.example.leave_a_record.DataBase.UserData;\r\nimport com.example.leave_a_record.R;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    private TextView Textname;\r\n    private Database_M m;\r\n    private Intent intent;\r\n\r\n    protected void onCreate(Bundle savedInstanceState){\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.page_main);\r\n        Textname= findViewById(R.id.text_username);\r\n        findViewById(R.id.imgbtn_newphoto).setOnClickListener(onClickListener);\r\n        findViewById(R.id.imgbtn_profile).setOnClickListener(onClickListener);\r\n\r\n        m=new Database_M();\r\n\r\n        m.userName(new Callback<String>() {\r\n                       @Override\r\n                       public void onCallback(String data) {\r\n                           Textname.setText(data);\r\n                       }\r\n                   });\r\n    }\r\n\r\n    View.OnClickListener onClickListener=new View.OnClickListener(){\r\n        public void onClick(View v){\r\n            switch (v.getId()){\r\n                case R.id.imgbtn_newphoto:\r\n                    intent =new Intent(MainActivity.this,ProfileActivity.class);\r\n                    startActivity(intent);\r\n                    break;\r\n                case R.id.imgbtn_profile:\r\n                    intent =new Intent(MainActivity.this,ProfileActivity.class);\r\n                    startActivity(intent);\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/leave_a_record/InterfaceActivity/MainActivity.java	(revision bb78fb2b4beb8c353ff57354b41720371d5a59eb)
+++ app/src/main/java/com/example/leave_a_record/InterfaceActivity/MainActivity.java	(date 1609148726792)
@@ -24,14 +24,14 @@
 
 public class MainActivity extends AppCompatActivity {
 
-    private TextView Textname;
+    private TextView textname;
     private Database_M m;
     private Intent intent;
 
     protected void onCreate(Bundle savedInstanceState){
         super.onCreate(savedInstanceState);
         setContentView(R.layout.page_main);
-        Textname= findViewById(R.id.text_username);
+        textname= findViewById(R.id.text_username);
         findViewById(R.id.imgbtn_newphoto).setOnClickListener(onClickListener);
         findViewById(R.id.imgbtn_profile).setOnClickListener(onClickListener);
 
@@ -40,13 +40,14 @@
         m.userName(new Callback<String>() {
                        @Override
                        public void onCallback(String data) {
-                           Textname.setText(data);
+                           textname.setText(data);
                        }
                    });
     }
 
     View.OnClickListener onClickListener=new View.OnClickListener(){
         public void onClick(View v){
+            // new photo는 사진 추가로 기능 전환시켜야함
             switch (v.getId()){
                 case R.id.imgbtn_newphoto:
                     intent =new Intent(MainActivity.this,ProfileActivity.class);
Index: app/src/main/java/com/example/leave_a_record/fragment/PinCourse.java
===================================================================
--- app/src/main/java/com/example/leave_a_record/fragment/PinCourse.java	(revision bb78fb2b4beb8c353ff57354b41720371d5a59eb)
+++ app/src/main/java/com/example/leave_a_record/fragment/PinCourse.java	(revision bb78fb2b4beb8c353ff57354b41720371d5a59eb)
@@ -1,53 +0,0 @@
-//package com.example.leave_a_record.fragment;
-//
-//import android.os.Bundle;
-//import android.util.Log;
-//import android.view.LayoutInflater;
-//import android.view.View;
-//import android.view.ViewGroup;
-//import android.widget.ImageView;
-//import android.widget.ListView;
-//
-//import androidx.annotation.NonNull;
-//import androidx.annotation.Nullable;
-//import androidx.fragment.app.Fragment;
-//
-//import com.example.leave_a_record.Adapter.CourseListAdapter;
-//import com.example.leave_a_record.Adapter.PinCourseListAdapter;
-//import com.example.leave_a_record.PinCourseListItem;
-//import com.example.leave_a_record.R;
-//import com.example.leave_a_record.image_edit_data;
-//
-//import java.util.ArrayList;
-//import java.util.List;
-//
-///**
-// * "여행코스" 탭을 눌렀을때 나오는 화면에 대한 java 코드
-// */
-//
-//public class PinCourse extends Fragment {
-//    private PinCourseListAdapter listViewAdapter;
-//    private ListView listView;
-//    private ArrayList<PinCourseListItem> pclListItem;
-//
-//    @Nullable
-//    @Override
-//    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
-//        View view = inflater.inflate(R.layout.item_tripcourse, container, false);
-//        Log.d("success", "tripCourse:success"); //로그찍기
-////
-//
-//        listView = view.findViewById(R.id.listview);            // 리스트뷰 아이디할당
-//        listViewAdapter = new PinCourseListAdapter(this,pclListItem);              // 만들어둔 어뎁터(CouseListAdapter.java)의 객체생성
-//        listView.setAdapter(listViewAdapter);                   // 리스트뷰에 어뎁터 장착
-//
-//
-//        // 이코드를 한줄을 추가할수록 ListView에 한 줄씩 추가됩니다.
-////        listViewAdapter.addItem("date_time","couse_time","place1","place2","start","finish",R.drawable.ic_airplane);
-////        listViewAdapter.addItem("2010","couse_time","place1","place2","start","finish",R.drawable.ic_airplane);
-////        listViewAdapter.addItem("2011","couse_time","place1","place2","start","finish",R.drawable.ic_airplane);
-//
-//        return view;
-//
-//    }
-//}
Index: app/src/main/java/com/example/leave_a_record/Adapter/PinCourseListAdapter.java
===================================================================
--- app/src/main/java/com/example/leave_a_record/Adapter/PinCourseListAdapter.java	(revision bb78fb2b4beb8c353ff57354b41720371d5a59eb)
+++ app/src/main/java/com/example/leave_a_record/Adapter/PinCourseListAdapter.java	(revision bb78fb2b4beb8c353ff57354b41720371d5a59eb)
@@ -1,296 +0,0 @@
-//package com.example.leave_a_record.Adapter;
-//
-//import android.content.Context;
-//import android.util.Log;
-//import android.view.LayoutInflater;
-//import android.view.View;
-//import android.view.ViewGroup;
-//import android.widget.BaseAdapter;
-//import android.widget.EditText;
-//import android.widget.ImageView;
-//import android.widget.TextView;
-//
-//import androidx.annotation.NonNull;
-//import androidx.appcompat.widget.AppCompatImageView;
-//import androidx.cardview.widget.CardView;
-//import androidx.recyclerview.widget.RecyclerView;
-//
-//import com.example.leave_a_record.CourseListItem;
-//import com.example.leave_a_record.PinCourseListItem;
-//import com.example.leave_a_record.R;
-//
-//import com.example.leave_a_record.image_edit_data;
-//
-//import org.w3c.dom.Text;
-//
-//import java.util.ArrayList;
-//import java.util.List;
-//
-///**
-// * Created by USER on 2018-06-25.
-// */
-//
-//public class PinCourseListAdapter extends RecyclerView.Adapter<PinCourseListAdapter.MyViewHolder> {
-//    // Adapter에 추가된 데이터를 저장하기 위한 ArrayList
-//    Context mContext;
-//    List<PinCourseListItem> listViewItemList = new ArrayList<PinCourseListItem>() ;
-//
-////    List<image_edit_data> imageditdataList;
-//    public PinCourseListAdapter(Context mContext, List<PinCourseListItem> listViewItemList) {
-//        this.mContext=mContext;
-//        this.listViewItemList=listViewItemList;
-//    }
-//
-//
-//    @Override
-//    public PinCourseListAdapter.MyViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
-//        View view=  LayoutInflater.from(parent.getContext()).inflate(R.layout.page_edit,parent,false);
-//        MyViewHolder vh =new MyViewHolder(view);
-//        return vh;
-//    }
-//
-//    @Override
-//    public void onBindViewHolder(@NonNull PinCourseListAdapter.MyViewHolder holder, int position) {
-//        PinCourseListItem listViewItem =listViewItemList.get(position);
-//        Log.d("date_time item : ",listViewItem.getDate_time());
-//        holder.date_time.setText(listViewItem.getDate_time());
-//        Log.d("date_time : ","listViewItem.getDate_time()===============================");
-//
-////        holder.edit_iv.setImageURI(imageditdata.getUri()); //test를위해
-////        holder.edit_date_time.setText(imageditdata.getDate_time());
-//
-//        ////////test code
-////        holder.edit_iv.setImageResource(user.getEdit_iv());
-//        ////////
-////        holder.edit_Text_date.setText(user.getEdit_Text_date());
-//
-//    }
-//
-//    @Override
-//    public int getItemCount() {
-//        Log.d("list view Item siez ", Integer.toString(listViewItemList.size()));
-//        return listViewItemList.size();
-//    }
-//
-//    public class MyViewHolder extends RecyclerView.ViewHolder {
-//        //        //        TextInputEditText edit_title;
-//////        RadioButton p1,p2,p3,p4,p5;
-////         CardView cardview;
-//         private TextView date_time;
-////        TextView couse_time;
-////        TextView place1, place2;
-////        TextView start,finish;
-////        TextView viewline;
-////         ImageView airplane;
-////        //        TextInputEditText Text_content;
-//////        Button save;
-////        public MyViewHolder(@NonNull View itemView) {
-////            super(itemView);
-////
-////            cardview= itemView.findViewById(R.id.cardview);
-////            date_time= itemView.findViewById(R.id.TextTripData);
-////            couse_time= itemView.findViewById(R.id.TextTripTime);
-////            place1=itemView.findViewById(R.id.detailStart);
-////            place2=itemView.findViewById(R.id.detailFinish);
-////            start=itemView.findViewById(R.id.textStart);
-////            finish=itemView.findViewById(R.id.textFinish);
-////            viewline=itemView.findViewById(R.id.viewLine);
-////            airplane=itemView.findViewById(R.id.airplane);
-////
-////
-//////            p1 =  itemView.findViewById(R.id.edit_Pin1);
-//////            p2= itemView.findViewById(R.id.edit_Pin2);
-//////            p3=itemView.findViewById(R.id.edit_Pin3);
-//////            p4=itemView.findViewById(R.id.edit_Pin4);
-//////            p5=itemView.findViewById(R.id.edit_Pin5);
-////
-////
-////
-////
-////
-////        }
-//        public MyViewHolder(@NonNull View itemView) {
-//            super(itemView);
-//            this.date_time=(TextView)itemView.findViewById(R.id.TextTripData);
-//
-////            p1 =  itemView.findViewById(R.id.edit_Pin1);
-////            p2= itemView.findViewById(R.id.edit_Pin2);
-////            p3=itemView.findViewById(R.id.edit_Pin3);
-////            p4=itemView.findViewById(R.id.edit_Pin4);
-////            p5=itemView.findViewById(R.id.edit_Pin5);
-////            edit_iv= itemView.findViewById(R.id.edit_iv);
-////            edit_date_time=itemView.findViewById(R.id.edit_date_time);
-////            edit_content=itemView.findViewById(R.id.edit_content);
-//
-//
-//        }
-//    }
-//}
-//    // Adapter에 사용되는 데이터의 개수를 리턴. : 필수 구현
-////
-////    public int getCount() {
-////        return listViewItemList.size() ;
-////    }
-////    // position에 위치한 데이터를 화면에 출력하는데 사용될 View를 리턴. : 필수 구현
-////
-////    public View getView(int position, View convertView, ViewGroup parent) {
-////        final int pos = position;
-////        final Context context = parent.getContext();
-////
-////        // "listview_item" Layout을 inflate하여 convertView 참조 획득.
-////        if (convertView == null) {
-////            LayoutInflater inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
-////            convertView = inflater.inflate(R.layout.item_cardview, parent, false);
-////        }
-//////        private CardView cardview;
-//////        private String date_time;
-//////        private String couse_time;
-//////        private String place1, place2;
-//////        private String start,finish;
-//////        private View viewline;
-//////        private ImageView airplane;
-////        // 화면에 표시될 View(Layout이 inflate된)으로부터 위젯에 대한 참조 획득
-////        CardView cardView = (CardView) convertView.findViewById(R.id.cardview);
-////        TextView date_time = (TextView) convertView.findViewById(R.id.TextTripData);
-////        TextView course_time = (TextView) convertView.findViewById(R.id.TextTripTime);
-////        TextView place1 = (TextView) convertView.findViewById(R.id.detailStart);
-////        TextView place2 = (TextView) convertView.findViewById(R.id.detailFinish);
-////        TextView start = (TextView) convertView.findViewById(R.id.textStart);
-////        TextView finish = (TextView) convertView.findViewById(R.id.textFinish);
-////        View viewline = (View) convertView.findViewById(R.id.viewLine);
-////        ImageView airplane = (ImageView) convertView.findViewById(R.id.airplane);
-////
-////        // 예시
-//////        TextView courseTitle = (TextView) convertView.findViewById(R.id.course_txt_title) ;
-//////        TextView courseDate = (TextView) convertView.findViewById(R.id.course_txt_date) ;
-//////        AppCompatImageView courseIcon = (AppCompatImageView) convertView.findViewById(R.id.course_img_icon
-//////        ) ;
-//////
-////        // Data Set(listViewItemList)에서 position에 위치한 데이터 참조 획득
-////        PinCourseListItem listViewItem = listViewItemList.get(position);
-////
-////        // 아이템 내 각 위젯에 데이터 반영
-//////        cardView(listViewItem.getCardview());
-////        date_time.setText(listViewItem.getDate_time());
-////        course_time.setText(listViewItem.getCouse_time());
-////        place1.setText(listViewItem.getPlace1());
-////        place2.setText(listViewItem.getPlace2());
-////        start.setText(listViewItem.getStart());
-////        finish.setText(listViewItem.getFinish());
-//////        viewline.setViewline(listViewItem.getViewline());
-////        airplane.setImageResource(listViewItem.getAirplane());
-////
-//////        courseTitle.setText(listViewItem.getTitle());
-//////        courseDate.setText(listViewItem.getDate());
-//////        courseIcon.setImageResource(listViewItem.getIcon());
-////
-//////        horizontal_graph.setLayoutParams(params);
-////
-////        return convertView;
-////    }
-////
-////    public PinCourseListAdapter.MyViewHolder onCreateViewHolder( ViewGroup parent, int viewType) {
-////        View view= LayoutInflater.from(mContext).inflate(R.layout.item_cardview,parent,false);
-////
-////        return new PinCourseListAdapter.MyViewHolder(view);
-////    }
-//////    public USERAdapter.UserViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
-//////        View view= LayoutInflater.from(mContext).inflate(R.layout.page_edit,parent,false);
-//////
-//////        return new USERAdapter.UserViewHolder(view);
-//////    }
-////    @Override
-//////    public void onBindViewHolder(@NonNull USERAdapter.UserViewHolder holder, int position) {
-//////        image_edit_data imageditdata = imageditdataList.get(position);
-//////        holder.edit_iv.setImageURI(imageditdata.getUri()); //test를위해
-//////        holder.edit_date_time.setText(imageditdata.getDate_time());
-//////
-//////        ////////test code
-////////        holder.edit_iv.setImageResource(user.getEdit_iv());
-//////        ////////
-////////        holder.edit_Text_date.setText(user.getEdit_Text_date());
-//////
-//////    }
-////    public void onBindViewHolder(@NonNull PinCourseListAdapter.MyViewHolder holder, int position) {
-////        holder.date_time.setText("pin");
-////    }
-////
-////
-////    public void clear(){
-////        listViewItemList.clear();
-////    }
-////
-////    // 지정한 위치(position)에 있는 데이터와 관계된 아이템(row)의 ID를 리턴. : 필수 구현
-////
-////    public long getItemId(int position) {
-////        return position ;
-////    }
-////
-////    @Override
-////    public int getItemCount() {
-////        return 0;
-////    }
-////
-////    // 지정한 위치(position)에 있는 데이터 리턴 : 필수 구현
-////
-////    public Object getItem(int position) {
-////        return listViewItemList.get(position) ;
-////    }
-////
-////    // 아이템 데이터 추가를 위한 함수. 개발자가 원하는대로 작성 가능.
-//////    public void addItem(CardView cardview,String date_time,String couse_time,String place1,String place2,String start,String finish,View viewline,ImageView airplane) {
-////    public void addItem(String date_time,String couse_time,String place1,String place2,String start,String finish,int airplane) {
-////        PinCourseListItem item = new PinCourseListItem();
-//////        item.setCardview(cardview);
-////        item.setDate_time(date_time);
-////        item.setCouse_time(couse_time);
-////        item.setPlace1(place1);
-////        item.setPlace2(place2);
-////        item.setStart(start);
-////        item.setFinish(finish);
-//////        item.setViewline(viewline);
-////        item.setAirplane(airplane);
-////
-////
-////        listViewItemList.add(item);
-////    }
-////
-////    public class MyViewHolder extends RecyclerView.ViewHolder {
-////        //        TextInputEditText edit_title;
-//////        RadioButton p1,p2,p3,p4,p5;
-////         CardView cardview;
-////         TextView date_time;
-////        TextView couse_time;
-////        TextView place1, place2;
-////        TextView start,finish;
-////        TextView viewline;
-////         ImageView airplane;
-////        //        TextInputEditText Text_content;
-//////        Button save;
-////        public MyViewHolder(@NonNull View itemView) {
-////            super(itemView);
-////
-////            cardview= itemView.findViewById(R.id.cardview);
-////            date_time= itemView.findViewById(R.id.TextTripData);
-////            couse_time= itemView.findViewById(R.id.TextTripTime);
-////            place1=itemView.findViewById(R.id.detailStart);
-////            place2=itemView.findViewById(R.id.detailFinish);
-////            start=itemView.findViewById(R.id.textStart);
-////            finish=itemView.findViewById(R.id.textFinish);
-////            viewline=itemView.findViewById(R.id.viewLine);
-////            airplane=itemView.findViewById(R.id.airplane);
-////
-////
-//////            p1 =  itemView.findViewById(R.id.edit_Pin1);
-//////            p2= itemView.findViewById(R.id.edit_Pin2);
-//////            p3=itemView.findViewById(R.id.edit_Pin3);
-//////            p4=itemView.findViewById(R.id.edit_Pin4);
-//////            p5=itemView.findViewById(R.id.edit_Pin5);
-////
-////
-////
-////
-////
-////        }
-////    }
-////}
Index: app/src/main/java/com/example/leave_a_record/DataBase/Post_search.java
===================================================================
--- app/src/main/java/com/example/leave_a_record/DataBase/Post_search.java	(revision bb78fb2b4beb8c353ff57354b41720371d5a59eb)
+++ app/src/main/java/com/example/leave_a_record/DataBase/Post_search.java	(revision bb78fb2b4beb8c353ff57354b41720371d5a59eb)
@@ -1,34 +0,0 @@
-//package com.example.leave_a_record.DataBase;
-////
-////import java.util.List;
-////
-////public class Post_search {
-////    List<String> post_search;
-////    int post_count;
-//////    public Post_search(List<String> post_search,int post_count){
-//////        this.post_search=post_search;
-//////        this.post_count=post_count;
-//////    }
-////    public Post_search(List<String> post_search){
-////        this.post_search=post_search;
-////        this.post_count=post_search.size();
-////    }
-////    public Post_search(){}
-////
-////
-////    public List<String> getPost_search() {
-////        return post_search;
-////    }
-////
-////    public void setPost_search(List<String> post_search) {
-////        this.post_search = post_search;
-////    }
-////
-////    public int getPost_count() {
-////        return post_count;
-////    }
-////
-////    public void setPost_count(int post_count) {
-////        this.post_count = post_count;
-////    }
-////}
Index: app/src/main/res/layout/page_sign_up.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n\r\n\r\n\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:scrollbarSize=\"24sp\" >\r\n\r\n<!--    <androidx.appcompat.widget.Toolbar-->\r\n<!--        app:layout_constraintTop_toTopOf=\"parent\"-->\r\n<!--        android:id=\"@+id/toolbar\"-->\r\n<!--        android:layout_width=\"match_parent\"-->\r\n<!--        android:layout_height=\"wrap_content\">-->\r\n\r\n\r\n\r\n\r\n<!--    </androidx.appcompat.widget.Toolbar>-->\r\n\r\n    <ImageView\r\n        android:id=\"@+id/image_header\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"280dp\"\r\n        android:contentDescription=\"@string/app_name\"\r\n        android:scaleType=\"centerCrop\"\r\n        android:src=\"@drawable/stamp_purple3\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <!--   <ImageButton\r\n           android:id=\"@+id/btn_back\"\r\n           android:layout_width=\"35dp\"\r\n           android:layout_height=\"35dp\"\r\n           android:layout_marginStart=\"15dp\"\r\n           android:layout_marginTop=\"15dp\"\r\n           android:contentDescription=\"@string/app_name\"\r\n           android:src=\"@drawable/ic_back\"\r\n           android:background=\"@drawable/bg_white\"\r\n           app:layout_constraintStart_toStartOf=\"parent\"\r\n           app:layout_constraintTop_toTopOf=\"parent\"\r\n           app:tint=\"@color/colorBlack\" />  -->\r\n\r\n\r\n    <View\r\n        android:id=\"@+id/viewSuppoter\"\r\n        android:layout_width=\"1dp\"\r\n        android:layout_height=\"1dp\"\r\n        android:layout_marginBottom=\"30dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"@+id/image_header\"\r\n        app:layout_constraintStart_toStartOf=\"parent\" />\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"0dp\"\r\n        android:background=\"@drawable/bg_login\"\r\n        android:paddingStart=\"30dp\"\r\n        android:paddingEnd=\"30dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/viewSuppoter\"\r\n        >\r\n\r\n        <TextView\r\n            android:id=\"@+id/text_signup\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"10dp\"\r\n            android:layout_marginTop=\"25dp\"\r\n            android:layout_marginEnd=\"10dp\"\r\n            android:gravity=\"center\"\r\n            android:text=\"회원가입\"\r\n            android:textColor=\"@color/colorTextPrimary\"\r\n            android:textSize=\"20sp\"\r\n            android:textStyle=\"bold\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n\r\n        <EditText\r\n            android:id=\"@+id/signup_name\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"10dp\"\r\n            android:layout_marginTop=\"40dp\"\r\n            android:layout_marginEnd=\"10dp\"\r\n            android:background=\"@null\"\r\n            android:hint=\"이름\"\r\n            android:imeOptions=\"actionNext\"\r\n            android:inputType=\"textEmailAddress\"\r\n            android:paddingStart=\"60dp\"\r\n            android:paddingEnd=\"10dp\"\r\n            android:textColor=\"@color/colorTextPrimary\"\r\n            android:textSize=\"15sp\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/text_signup\"\r\n            tools:ignore=\"Autofill\" />\r\n\r\n        <View\r\n            android:id=\"@+id/view_name\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"1dp\"\r\n            android:layout_marginStart=\"10dp\"\r\n            android:layout_marginTop=\"10dp\"\r\n            android:layout_marginEnd=\"10dp\"\r\n            android:background=\"@color/colorTextHint\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/signup_name\"/>\r\n\r\n        <ImageView\r\n            android:layout_width=\"20dp\"\r\n            android:layout_height=\"20dp\"\r\n            android:layout_marginStart=\"10dp\"\r\n            android:contentDescription=\"@string/app_name\"\r\n            android:src=\"@drawable/ic_email\"\r\n            app:tint=\"@color/colorTextHint\"\r\n            app:layout_constraintBottom_toBottomOf=\"@id/signup_name\"\r\n            app:layout_constraintStart_toStartOf=\"@id/signup_name\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/signup_id\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"10dp\"\r\n            android:layout_marginTop=\"40dp\"\r\n            android:layout_marginEnd=\"10dp\"\r\n            android:background=\"@null\"\r\n            android:hint=\"이메일\"\r\n            android:imeOptions=\"actionDone\"\r\n            android:inputType=\"textEmailAddress\"\r\n            android:paddingStart=\"60dp\"\r\n            android:paddingEnd=\"10dp\"\r\n            android:textColor=\"@color/colorTextPrimary\"\r\n            android:textSize=\"15sp\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/view_name\"\r\n            tools:ignore=\"Autofill\"\r\n            />\r\n\r\n        <View\r\n            android:id=\"@+id/view_email\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"1dp\"\r\n            android:layout_marginStart=\"10dp\"\r\n            android:layout_marginTop=\"10dp\"\r\n            android:layout_marginEnd=\"10dp\"\r\n            android:background=\"@color/colorTextHint\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/signup_id\"/>\r\n\r\n        <ImageView\r\n            android:layout_width=\"20dp\"\r\n            android:layout_height=\"20dp\"\r\n            android:layout_marginStart=\"10dp\"\r\n            android:contentDescription=\"@string/app_name\"\r\n            android:src=\"@drawable/ic_lock\"\r\n            app:tint=\"@color/colorTextHint\"\r\n            app:layout_constraintBottom_toBottomOf=\"@id/signup_id\"\r\n            app:layout_constraintStart_toStartOf=\"@id/signup_id\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/signup_pw\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"10dp\"\r\n            android:layout_marginTop=\"40dp\"\r\n            android:layout_marginEnd=\"10dp\"\r\n            android:background=\"@null\"\r\n            android:hint=\"비밀번호\"\r\n            android:imeOptions=\"actionDone\"\r\n            android:inputType=\"textPassword\"\r\n            android:paddingStart=\"60dp\"\r\n            android:paddingEnd=\"10dp\"\r\n            android:textColor=\"@color/colorTextPrimary\"\r\n            android:textSize=\"15sp\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/view_email\"\r\n            tools:ignore=\"Autofill\"\r\n            />\r\n\r\n        <View\r\n            android:id=\"@+id/view_password\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"1dp\"\r\n            android:layout_marginStart=\"10dp\"\r\n            android:layout_marginTop=\"10dp\"\r\n            android:layout_marginEnd=\"10dp\"\r\n            android:background=\"@color/colorTextHint\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/signup_pw\"/>\r\n\r\n        <ImageView\r\n            android:layout_width=\"20dp\"\r\n            android:layout_height=\"20dp\"\r\n            android:layout_marginStart=\"10dp\"\r\n            android:contentDescription=\"@string/app_name\"\r\n            android:src=\"@drawable/ic_lock\"\r\n            app:tint=\"@color/colorTextHint\"\r\n            app:layout_constraintBottom_toBottomOf=\"@id/signup_pw\"\r\n            app:layout_constraintStart_toStartOf=\"@id/signup_pw\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/signup_pwd\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"10dp\"\r\n            android:layout_marginTop=\"40dp\"\r\n            android:layout_marginEnd=\"10dp\"\r\n            android:background=\"@null\"\r\n            android:hint=\"비밀번호 확인\"\r\n            android:imeOptions=\"actionDone\"\r\n            android:inputType=\"textPassword\"\r\n            android:paddingStart=\"60dp\"\r\n            android:paddingEnd=\"10dp\"\r\n            android:textColor=\"@color/colorTextPrimary\"\r\n            android:textSize=\"15sp\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/view_password\"\r\n            tools:ignore=\"Autofill\"\r\n            />\r\n\r\n        <View\r\n            android:id=\"@+id/view_password_confirm\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"1dp\"\r\n            android:layout_marginStart=\"10dp\"\r\n            android:layout_marginTop=\"10dp\"\r\n            android:layout_marginEnd=\"10dp\"\r\n            android:background=\"@color/colorTextHint\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/signup_pwd\"/>\r\n\r\n        <ImageView\r\n            android:layout_width=\"20dp\"\r\n            android:layout_height=\"20dp\"\r\n            android:layout_marginStart=\"10dp\"\r\n            android:contentDescription=\"@string/app_name\"\r\n            android:src=\"@drawable/ic_lock\"\r\n            app:tint=\"@color/colorTextHint\"\r\n            app:layout_constraintBottom_toBottomOf=\"@id/signup_pwd\"\r\n            app:layout_constraintStart_toStartOf=\"@id/signup_pwd\" />\r\n        <Button\r\n            android:id=\"@+id/signup_bt\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"10dp\"\r\n           android:layout_marginTop=\"@dimen/_15sdp\"\r\n            android:background=\"@drawable/btn_login\"\r\n            android:text=\"계정 생성하기\"\r\n            android:textAllCaps=\"false\"\r\n            android:textColor=\"@color/colorWhite\"\r\n            android:textSize=\"13sp\"\r\n            android:textStyle=\"bold\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/signup_pwd\"/>\r\n        <Button\r\n            android:id=\"@+id/signTologin_bt\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"BACK\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/signup_bt\"\r\n            />\r\n\r\n\r\n\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/page_sign_up.xml	(revision bb78fb2b4beb8c353ff57354b41720371d5a59eb)
+++ app/src/main/res/layout/page_sign_up.xml	(date 1608546012707)
@@ -1,25 +1,10 @@
 <?xml version="1.0" encoding="utf-8"?>
-
-
-
 <androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
     android:scrollbarSize="24sp" >
-
-<!--    <androidx.appcompat.widget.Toolbar-->
-<!--        app:layout_constraintTop_toTopOf="parent"-->
-<!--        android:id="@+id/toolbar"-->
-<!--        android:layout_width="match_parent"-->
-<!--        android:layout_height="wrap_content">-->
-
-
-
-
-<!--    </androidx.appcompat.widget.Toolbar>-->
-
     <ImageView
         android:id="@+id/image_header"
         android:layout_width="match_parent"
@@ -30,21 +15,6 @@
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="parent" />
-
-    <!--   <ImageButton
-           android:id="@+id/btn_back"
-           android:layout_width="35dp"
-           android:layout_height="35dp"
-           android:layout_marginStart="15dp"
-           android:layout_marginTop="15dp"
-           android:contentDescription="@string/app_name"
-           android:src="@drawable/ic_back"
-           android:background="@drawable/bg_white"
-           app:layout_constraintStart_toStartOf="parent"
-           app:layout_constraintTop_toTopOf="parent"
-           app:tint="@color/colorBlack" />  -->
-
-
     <View
         android:id="@+id/viewSuppoter"
         android:layout_width="1dp"
@@ -68,8 +38,8 @@
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
             android:layout_marginStart="10dp"
-            android:layout_marginTop="25dp"
-            android:layout_marginEnd="10dp"
+            android:layout_marginTop="30dp"
+            android:layout_marginEnd="5dp"
             android:gravity="center"
             android:text="회원가입"
             android:textColor="@color/colorTextPrimary"
@@ -237,7 +207,7 @@
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
             android:layout_marginStart="10dp"
-           android:layout_marginTop="@dimen/_15sdp"
+            android:layout_marginTop="@dimen/_15sdp"
             android:background="@drawable/btn_login"
             android:text="계정 생성하기"
             android:textAllCaps="false"
@@ -246,21 +216,20 @@
             android:textStyle="bold"
             app:layout_constraintTop_toBottomOf="@id/signup_pwd"/>
         <Button
-            android:id="@+id/signTologin_bt"
+            android:id="@+id/SignToLogin_bt"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
+            android:layout_marginStart="10dp"
+            android:layout_marginTop="@dimen/_5sdp"
+            android:background="@drawable/btn_back"
             android:text="BACK"
+            android:textAllCaps="false"
+            android:textColor="@color/colorWhite"
+            android:textSize="13sp"
+            android:textStyle="bold"
             app:layout_constraintTop_toBottomOf="@id/signup_bt"
             />
 
-
-
     </androidx.constraintlayout.widget.ConstraintLayout>
 
-
-
-
-
-
-
 </androidx.constraintlayout.widget.ConstraintLayout>
Index: app/src/main/java/com/example/leave_a_record/Adapter/USERAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.leave_a_record.Adapter;\r\n\r\nimport android.content.Context;\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.RadioButton;\r\nimport android.widget.RadioGroup;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.leave_a_record.R;\r\nimport com.example.leave_a_record.image_edit_data;\r\nimport com.google.android.material.textfield.TextInputEditText;\r\nimport com.makeramen.roundedimageview.RoundedImageView;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class USERAdapter extends RecyclerView.Adapter<USERAdapter.UserViewHolder>{\r\n    Context mContext;\r\n    List<image_edit_data> imageditdataList;\r\n\r\n    private ArrayList<String> Strings  =new ArrayList<>();\r\n    public USERAdapter(Context mContext, List<image_edit_data> imageditdataList) {\r\n        this.mContext = mContext;\r\n        this.imageditdataList = imageditdataList;\r\n    }\r\n    @NonNull\r\n    @Override\r\n    public UserViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        View view= LayoutInflater.from(mContext).inflate(R.layout.item_viewpager_editpage,parent,false);\r\n        return new UserViewHolder(view);\r\n    }\r\n    @Override\r\n    public void onBindViewHolder(@NonNull UserViewHolder holder,final int position) {\r\n        image_edit_data imageditdata = imageditdataList.get(position);\r\n        holder.edit_myimg.setImageURI(imageditdata.getUri());\r\n\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return imageditdataList.size();\r\n    }\r\n\r\n    public class UserViewHolder extends RecyclerView.ViewHolder {\r\n        RoundedImageView edit_myimg;\r\n//        EditText edit;\r\n        public UserViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            edit_myimg= itemView.findViewById(R.id.edit_myimg);\r\n//            edit=itemView.findViewById(R.id.edit_location);\r\n\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/leave_a_record/Adapter/USERAdapter.java	(revision bb78fb2b4beb8c353ff57354b41720371d5a59eb)
+++ app/src/main/java/com/example/leave_a_record/Adapter/USERAdapter.java	(date 1609143267612)
@@ -58,7 +58,6 @@
             super(itemView);
             edit_myimg= itemView.findViewById(R.id.edit_myimg);
 //            edit=itemView.findViewById(R.id.edit_location);
-
         }
     }
 
Index: app/src/main/java/com/example/leave_a_record/DataBase/PostData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.leave_a_record.DataBase;\r\n\r\nimport java.io.Serializable;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\npublic class PostData { //게시물에 대한 데이터를 임시저장하는 객체\r\n    private String post_title; // 포스트 제목\r\n    private List<String> post_images_URI; // 포스트 이미지 uri (리스트로 구현)\r\n    private String post_content; // 포스트에 대한 게시글\r\n    private List<String> post_meta_gps_Latitue; // 포스트 이미지 좌표\r\n    private List<String> post_meta_gps_Longitude; // 포스트 이미지 좌표\r\n    private List<String> post_meta_datetime; // 포스트 이미지 시간\r\n    private List<String> post_pin; //포스트 이미지 핀\r\n    private String post_date;\r\n\r\n\r\n\r\n    //2차 내용\r\n    private int secret;\r\n\r\n\r\n    public PostData(){}\r\n\r\n\r\n    public PostData(String post_title,List<String> post_images_URI, String post_content,List<String> post_meta_gps_Latitue,List<String> post_meta_gps_Longitude, List<String> post_meta_datetime,List<String> post_pin,String post_date) {\r\n        this.post_title = post_title;\r\n        this.post_content = post_content;\r\n        this.post_images_URI = post_images_URI;\r\n        this.post_meta_gps_Latitue=post_meta_gps_Latitue;\r\n        this.post_meta_gps_Longitude=post_meta_gps_Longitude;\r\n        this.post_meta_datetime = post_meta_datetime;\r\n        this.post_pin=post_pin;\r\n        this.post_date=post_date;\r\n\r\n\r\n    }\r\n\r\n    public int getSecret() {\r\n        return secret;\r\n    }\r\n\r\n    public void setSecret(int secret) {\r\n        this.secret = secret;\r\n    }\r\n\r\n    public String getPost_title() {\r\n        return post_title;\r\n    }\r\n\r\n    public void setPost_title(String post_title) {\r\n        this.post_title = post_title;\r\n    }\r\n\r\n    public List<String> getPost_images_URI() {\r\n        return post_images_URI;\r\n    }\r\n\r\n    public void setPost_images_URI(List<String> post_images_URI) {\r\n        this.post_images_URI = post_images_URI;\r\n    }\r\n\r\n    public String getPost_content() {\r\n        return post_content;\r\n    }\r\n\r\n    public void setPost_content(String post_content) {\r\n        this.post_content = post_content;\r\n    }\r\n\r\n    public List<String> getPost_meta_gps_Latitue() {\r\n        return post_meta_gps_Latitue;\r\n    }\r\n\r\n    public void setPost_meta_gps_Latitue(List<String> post_meta_gps_Latitue) {\r\n        this.post_meta_gps_Latitue = post_meta_gps_Latitue;\r\n    }\r\n\r\n    public List<String> getPost_meta_gps_Longitude() {\r\n        return post_meta_gps_Longitude;\r\n    }\r\n\r\n    public void setPost_meta_gps_Longitude(List<String> post_meta_gps_Longitude) {\r\n        this.post_meta_gps_Longitude = post_meta_gps_Longitude;\r\n    }\r\n\r\n    public List<String> getPost_meta_datetime() {\r\n        return post_meta_datetime;\r\n    }\r\n\r\n    public void setPost_meta_datetime(List<String> post_meta_datetime) {\r\n        this.post_meta_datetime = post_meta_datetime;\r\n    }\r\n\r\n    public List<String> getPost_pin() {\r\n        return post_pin;\r\n    }\r\n\r\n    public void setPost_pin(List<String> post_pin) {\r\n        this.post_pin = post_pin;\r\n    }\r\n\r\n    public String getPost_date() {\r\n        return post_date;\r\n    }\r\n\r\n    public void setPost_date(String post_date) {\r\n        this.post_date = post_date;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/leave_a_record/DataBase/PostData.java	(revision bb78fb2b4beb8c353ff57354b41720371d5a59eb)
+++ app/src/main/java/com/example/leave_a_record/DataBase/PostData.java	(date 1609148818706)
@@ -16,15 +16,12 @@
     private List<String> post_pin; //포스트 이미지 핀
     private String post_date;
 
-
-
-    //2차 내용
-    private int secret;
-
+    private String secret;
+    private int point;
 
     public PostData(){}
 
-
+ //메타데이터가 없는경우 생성자를 바꿔야함 추가해야함.
     public PostData(String post_title,List<String> post_images_URI, String post_content,List<String> post_meta_gps_Latitue,List<String> post_meta_gps_Longitude, List<String> post_meta_datetime,List<String> post_pin,String post_date) {
         this.post_title = post_title;
         this.post_content = post_content;
@@ -34,15 +31,23 @@
         this.post_meta_datetime = post_meta_datetime;
         this.post_pin=post_pin;
         this.post_date=post_date;
+        this.secret="public"; // Default Settings public , Can be set private
+        this.point =0; // post scraping point
+    }
 
+    public int getPoint() {
+        return point;
+    }
 
+    public void setPoint(int point) {
+        this.point = point;
     }
 
-    public int getSecret() {
+    public String getSecret() {
         return secret;
     }
 
-    public void setSecret(int secret) {
+    public void setSecret(String secret) {
         this.secret = secret;
     }
 
Index: app/src/main/java/com/example/leave_a_record/DataBase/UserData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.leave_a_record.DataBase;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.List;\r\n\r\npublic class UserData {\r\n    private String user_id;      // 사용자 id\r\n    private String user_name;    // 사용자 이름\r\n//    private String user_phone;   // 사용자 핸드폰번호(향후)\r\n//    private String user_birth; // 생년월일(향후)\r\n    private String user_pwd;// 사용자 비밀번호\r\n    private String uid;\r\n    private String user_image;\r\n    private String user_about;\r\n    private List<String> opendata;\r\n\r\n    public List<String> getPostdata() {\r\n        return opendata;\r\n    }\r\n\r\n    public void setPostdata(List<String> postdata) {\r\n        this.opendata = postdata;\r\n    }\r\n\r\n    public UserData(){}\r\n    public UserData(String user_id, String user_name, String user_pwd,String uid) {\r\n        this.user_id = user_id;\r\n        this.user_name = user_name;\r\n//        this.user_phone = user_phone; 향후\r\n        this.user_pwd = user_pwd;\r\n        this.uid= uid;\r\n\r\n        this.user_image=\"\";\r\n        this.user_about=\"Life is a Journery!\";\r\n//        this.opendata=\" \";\r\n\r\n//        this.user_birth=user_birth; 향후\r\n    }\r\n\r\n    public String getUser_about() {\r\n        return user_about;\r\n    }\r\n\r\n    public void setUser_about(String user_about) {\r\n        this.user_about = user_about;\r\n    }\r\n\r\n    public String getUser_image() {\r\n        return user_image;\r\n    }\r\n\r\n    public void setUser_image(String user_image) {\r\n        this.user_image = user_image;\r\n    }\r\n\r\n    public String getUid() {\r\n        return uid;\r\n    }\r\n\r\n    public void setUid(String uid) {\r\n        this.uid = uid;\r\n    }\r\n\r\n    public String getUser_id() {\r\n        return user_id;\r\n    }\r\n\r\n    public void setUser_id(String user_id) {\r\n        this.user_id = user_id;\r\n    }\r\n\r\n    public String getUser_name() {\r\n        return user_name;\r\n    }\r\n\r\n    public void setUser_name(String user_name) {\r\n        this.user_name = user_name;\r\n    }\r\n\r\n    public String getUser_pwd() {\r\n        return user_pwd;\r\n    }\r\n\r\n    public void setUser_pwd(String user_pwd) {\r\n        this.user_pwd = user_pwd;\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/leave_a_record/DataBase/UserData.java	(revision bb78fb2b4beb8c353ff57354b41720371d5a59eb)
+++ app/src/main/java/com/example/leave_a_record/DataBase/UserData.java	(date 1609145768885)
@@ -13,29 +13,14 @@
     private String uid;
     private String user_image;
     private String user_about;
-    private List<String> opendata;
-
-    public List<String> getPostdata() {
-        return opendata;
-    }
-
-    public void setPostdata(List<String> postdata) {
-        this.opendata = postdata;
-    }
-
     public UserData(){}
     public UserData(String user_id, String user_name, String user_pwd,String uid) {
         this.user_id = user_id;
         this.user_name = user_name;
-//        this.user_phone = user_phone; 향후
         this.user_pwd = user_pwd;
         this.uid= uid;
-
-        this.user_image="";
+        this.user_image="default";
         this.user_about="Life is a Journery!";
-//        this.opendata=" ";
-
-//        this.user_birth=user_birth; 향후
     }
 
     public String getUser_about() {
Index: app/src/main/java/com/example/leave_a_record/InterfaceActivity/EditActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.leave_a_record.InterfaceActivity;\r\n\r\nimport android.app.ProgressDialog;\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.widget.Button;\r\nimport android.widget.CompoundButton;\r\nimport android.widget.EditText;\r\nimport android.widget.Switch;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.viewpager2.widget.ViewPager2;\r\n\r\n//import java.io.Serializable;\r\nimport com.example.leave_a_record.Adapter.USERAdapter;\r\nimport com.example.leave_a_record.BackPressHandler;\r\nimport com.example.leave_a_record.DataBase.Callback;\r\nimport com.example.leave_a_record.DataBase.PostData;\r\n\r\n\r\nimport com.example.leave_a_record.R;\r\nimport com.example.leave_a_record.image_edit_data;\r\nimport com.example.leave_a_record.DataBase.UserData;\r\nimport com.example.leave_a_record.post_data_image;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.List;\r\n\r\npublic class EditActivity extends AppCompatActivity  {\r\n    ViewPager2 viewPager2;\r\n    USERAdapter userAdapter;\r\n    Button save_content;\r\n    TextView current_time;\r\n    ArrayList<post_data_image> pd_datas_receive;\r\n\r\n    FirebaseAuth mAuth;\r\n    DatabaseReference mDatabase;\r\n    DatabaseReference mdatabase;\r\n    DatabaseReference oDatabase;\r\n\r\n    List<image_edit_data> imageditdataList;\r\n    List<String> post_images_URI;\r\n\r\n    List<String> post_meta_datetime;\r\n    List<String> post_pin;\r\n    List<String> post_meta_gps_Latitue;\r\n    List<String> post_meta_gps_Longitude;\r\n    ArrayList<String> post_update_time;\r\n    EditText content;\r\n    String content_data;\r\n    EditText title;\r\n    String title_data;\r\n    Switch switchbutton;\r\n    TextView control_text;\r\n    int secret;\r\n    SimpleDateFormat simpleDate = new SimpleDateFormat(\"yyyyMMddHHmmss\");\r\n    SimpleDateFormat post_upload_time_simple =new SimpleDateFormat(\"yyyy년 MM월 dd일의 기록\");\r\n    long now = System.currentTimeMillis();\r\n    Date mDate = new Date(now);\r\n    final String current_post_Time = simpleDate.format(mDate); //포스트용  시간\r\n    final String post_upload_time = post_upload_time_simple.format(mDate); // 게시물등록 고유 시간\r\n    final Handler mHandler = new Handler();\r\n\r\n\r\n    PostData postData;\r\n//    PostData_image postData_image;\r\n//    DatabaseManagement db\r\n    private UserData userdata;\r\n    private BackPressHandler backPressHandler = new BackPressHandler(this);\r\n\r\n//    ArrayList<post_data_image> list =(ArrayList<post_data_image>)intent.getSerializableExtra(\"image-data\");    ----오류-----\r\n\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        final UserData userData;\r\n\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.page_edit);\r\n        title=findViewById(R.id.edit_title);\r\n        content=findViewById(R.id.edit_content);\r\n//        save_content=findViewById(R.id.save);\r\n        pd_datas_receive = (ArrayList<post_data_image>)getIntent().getSerializableExtra(\"pd_datas\");\r\n        viewPager2 = findViewById(R.id.viewpager2);\r\n        getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN); /////////키보드 가림방지\r\n        save_content=findViewById(R.id.save_content);\r\n        switchbutton=findViewById(R.id.option_sw);\r\n        control_text=findViewById(R.id.text_control);\r\n        control_text.setText(\"비활성화\");\r\n\r\n        switchbutton.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\r\n            @Override\r\n            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\r\n                if(isChecked){\r\n                    control_text.setText(\"활성화\");\r\n                    control_text.setTextColor(Color.rgb(122,87,209));\r\n                }\r\n                else{\r\n                    control_text.setText(\"비활성화\");\r\n\r\n                    control_text.setTextColor(Color.GRAY);\r\n                }\r\n            }\r\n        });\r\n\r\n        switchbutton.setChecked(false);\r\n       //시간측정용\r\n\r\n        post_update_time=new ArrayList<>();\r\n        title.setHint(post_upload_time);\r\n        post_update_time.add(current_post_Time);\r\n        imageditdataList = new ArrayList<>(); //이미지를 위한 리스트\r\n        post_images_URI = new ArrayList<>();\r\n        post_meta_gps_Latitue=new ArrayList<>();\r\n        post_meta_gps_Longitude=new ArrayList<>();\r\n        post_meta_datetime=new ArrayList<>();\r\n        post_pin = new ArrayList<>(); // ok\r\n        userdata=new UserData();\r\n////////////////////////////////////////////////////////////////////////////////////\r\n        mAuth= FirebaseAuth.getInstance();\r\n        FirebaseUser user =  mAuth.getCurrentUser();\r\n        FirebaseDatabase database = FirebaseDatabase.getInstance();\r\n        mdatabase=database.getReference();\r\n        mDatabase=database.getReference().child(\"posts\").child(mAuth.getCurrentUser().getUid());\r\n        oDatabase=database.getReference().child(\"open\");\r\n//        mdatabase.child(\"posts\").child(mAuth.getCurrentUser().getUid()).child(\"post_upload_time\").setValue(current_post_Time);\r\n\r\n        //데이터 필드 posts -> uid -> current time(게시물들) -> (게시물내용)child(uri,content,pin), title,datetime\r\n////////////////////////////////////////////////////////////////////////////////////\r\n        Handler handler = new Handler();\r\n\r\n        for(int i=0;i<pd_datas_receive.size();i++){\r\n            imageditdataList.add(new image_edit_data(Uri.parse(pd_datas_receive.get(i).getUri())));\r\n            Log.d(\"현재 진행중인 것은\", \"Uri를 성공적으로 받았습니다.\");\r\n        }\r\n\r\n        userAdapter =  new USERAdapter(this, imageditdataList);\r\n        viewPager2.setAdapter(userAdapter);\r\n\r\n        save_content.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Toast.makeText(getApplicationContext(), \"업로드중\", Toast.LENGTH_SHORT).show();\r\n                Log.d(\"현재 진행중인것은 \", \"게시글작성중\");\r\n\r\n                if (title.getText().toString().equals(\"\")) {\r\n                    title_data = \"기록일지\";\r\n                } else {\r\n                    title_data = title.getText().toString();\r\n                }\r\n                if (content.getText().toString() != null) {\r\n                    content_data = content.getText().toString();\r\n                } else {\r\n                    content_data = \" \";\r\n                }\r\n\r\n\r\n                for (int i = 0; i < pd_datas_receive.size(); i++) {  //post_data에 넣기전 처리과정\r\n                    if (pd_datas_receive.get(i).getData_gps_Latitude() != null) {\r\n                        post_meta_gps_Latitue.add(pd_datas_receive.get(i).getData_gps_Latitude());\r\n                    } else {\r\n                        post_meta_gps_Latitue.add(\" \");\r\n                    }\r\n                    if (pd_datas_receive.get(i).getData_gps_Longitude() != null) {\r\n                        post_meta_gps_Longitude.add(pd_datas_receive.get(i).getData_gps_Longitude());\r\n                    } else {\r\n                        post_meta_gps_Latitue.add(\" \");\r\n                    }\r\n                    if(pd_datas_receive.get(i).getDate_time()!=null){\r\n                        post_meta_datetime.add(pd_datas_receive.get(i).getDate_time());\r\n                    }\r\n                    else{\r\n                        post_meta_gps_Longitude.add(\" \");\r\n                    }\r\n                }\r\n                if(control_text.getText().equals(\"비활성화\")){\r\n                    secret=0;\r\n                }\r\n                else{\r\n                    secret=1;\r\n                }\r\n                autopin(post_meta_gps_Latitue, post_meta_gps_Longitude, post_pin);\r\n                for (int i = 0; i < imageditdataList.size(); i++) {\r\n                    uploadFile(current_post_Time, i, new Callback<Integer>() {\r\n                        @Override\r\n                        public void onCallback(Integer data) {\r\n                            if(data==imageditdataList.size()-1)\r\n                            {\r\n                                postData = new PostData(title_data,post_images_URI, content_data, post_meta_gps_Latitue, post_meta_gps_Longitude, post_meta_datetime, post_pin,post_upload_time);\r\n                                mHandler.postDelayed(new Runnable()  {\r\n                                    public void run() {\r\n                                        mDatabase.child(\"postData\").child(current_post_Time).setValue(postData).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                            @Override\r\n                                            public void onSuccess(Void aVoid) {\r\n                                                if(secret==0){\r\n                                                    oDatabase.child(current_post_Time).setValue(postData);\r\n                                                }\r\n                                                goProfile();\r\n                                            }\r\n                                            });\r\n                                    }\r\n                                }, 5000); // 5초후\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n//                for (int i = 0; i < imageditdataList.size(); i++) {\r\n//                    uploadFile(current_post_Time,i);\r\n//                }\r\n\r\n\r\n//                postData_image = new PostData_image(post_images_URI, content_data, post_meta_gps_Latitue, post_meta_gps_Longitude, post_meta_datetime, post_pin);\r\n//                mDatabase.child(\"postData\").child(current_post_Time).setValue(postData).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n//                    @Override\r\n//                    public void onSuccess(Void aVoid) {\r\n//                        for (int i = 0; i < imageditdataList.size(); i++) {\r\n//                           uploadFile(current_post_Time, i, new Callback<Integer>() {\r\n//                               @Override\r\n//                               public void onCallback(Integer data) {\r\n//                                   if(data==imageditdataList.size()-1)\r\n//                                   {\r\n//                                       mHandler.postDelayed(new Runnable()  {\r\n//                                           public void run() {\r\n////                                               goProfile();\r\n//                                           }\r\n//                                       }, 5000); // 5초후\r\n//                                   }\r\n//                               }\r\n//                           });\r\n//                        }\r\n//\r\n//                    }\r\n//                });\r\n//                mDatabase.child(\"postData_image\").setValue(postData_image);\r\n\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    private void uploadFile(String current_post_Time, final int i, final Callback<Integer> callback) {\r\n\r\n        Uri FilePath=Uri.parse(pd_datas_receive.get(i).getUri());\r\n        String user_name= mAuth.getCurrentUser().getUid();\r\n        Log.d(\"넘긴 아이디값은: \", user_name);\r\n        String File_tag=Integer.toString(i);\r\n\r\n        if (FilePath != null) {\r\n            //업로드 진행 Dialog 보이기\r\n            final ProgressDialog progressDialog = new ProgressDialog(this);\r\n            progressDialog.setTitle(\"기록을 남기는중입니다...\");\r\n            progressDialog.show();\r\n            mHandler.postDelayed(new Runnable()  {\r\n                public void run() {\r\n                   progressDialog.dismiss();\r\n                }\r\n            }, 5000);\r\n\r\n//////////////// storage 와 cloud의 동시에 저장하자 . /////////////////////////////////\r\n            //storage\r\n            FirebaseStorage storage = FirebaseStorage.getInstance();\r\n\r\n            //Unique한 파일명을 만들자.\r\n//            SimpleDateFormat formatter = new SimpleDateFormat(File_tag);\r\n//            Date now = new Date();\r\n            String filename =current_post_Time+File_tag+\".jpg\"; //filename 202010261243 1 . jpg\r\n            post_images_URI.add(filename);\r\n            //storage 주소와 폴더 파일명을 지정해 준다.\r\n            StorageReference storageRef = storage.getReferenceFromUrl(\"gs://leave-a-record.appspot.com\").child(\"images/\" + filename);\r\n            //올라가거라...\r\n            storageRef.putFile(FilePath)\r\n                    //성공시\r\n                    .addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n                        @Override\r\n                        public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {\r\n                            Toast.makeText(getApplicationContext(), \"이미지 저장 성공!\", Toast.LENGTH_SHORT).show();\r\n                            callback.onCallback(i);\r\n                        }\r\n                    })\r\n                    //실패시\r\n                    .addOnFailureListener(new OnFailureListener() {\r\n                        @Override\r\n                        public void onFailure(@NonNull Exception e) {\r\n                            Toast.makeText(getApplicationContext(), \"기록 실패!\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    });\r\n//                    진행중\r\n//                    .addOnProgressListener(new OnProgressListener<UploadTask.TaskSnapshot>() {\r\n//                        @Override\r\n//                        public void onProgress(UploadTask.TaskSnapshot taskSnapshot) {\r\n//                            @SuppressWarnings(\"VisibleForTests\") //이걸 넣어 줘야 아랫줄에 에러가 사라진다. 넌 누구냐?\r\n//                                    double progress = (100 * taskSnapshot.getBytesTransferred()) /  taskSnapshot.getTotalByteCount();\r\n//                            //dialog에 진행률을 퍼센트로 출력해 준다\r\n//                            progressDialog.setMessage(\"기록 작성중.. \" + ((int) progress) + \"% ...\");\r\n//                            if((int)progress==100){\r\n//                                Log.d(\"왜팅기냐\",\"왜\");\r\n//                            }\r\n//                        }\r\n//                    });\r\n        } else {\r\n            Toast.makeText(getApplicationContext(), \"파일을 먼저 선택하세요.\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n\r\n    public void autopin(List<String> lat ,List<String> lon,List<String> pin){\r\n        int i;\r\n        double sum=0;\r\n        double arange;\r\n        int num=1;\r\n        pin.add(\"pin\"+ String.valueOf(num));\r\n        for(i=1;i<lat.size();i++){\r\n            sum+=distance(pTos(lat.get(i-1)),pTos(lon.get(i-1)),pTos(lat.get(i)),pTos(lon.get(i)));\r\n            arange=distance(pTos(lat.get(i-1)),pTos(lon.get(i-1)),pTos(lat.get(i)),pTos(lon.get(i)));\r\n            if(arange>100) {\r\n                num++;\r\n                pin.add(\"pin\" + String.valueOf(num));\r\n            }else{\r\n                pin.add(\"pin\" + String.valueOf(num));\r\n            }\r\n        }\r\n        sum=sum/lat.size();\r\n    }\r\n    public double pTos(String s){\r\n        double D=Double.parseDouble(s);\r\n        return D;\r\n    }\r\n    public String dTos(double d){\r\n        String S=Double.toString(d);\r\n        return S;\r\n    }\r\n\r\n    public double distance(double lat1,double lon1,double lat2,double lon2){\r\n        double theta = lon1 - lon2;\r\n        double dist = Math.sin(deg2rad(lat1)) * Math.sin(deg2rad(lat2)) + Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.cos(deg2rad(theta));\r\n        dist = dist * 1609.344;\r\n        return dist;\r\n    }\r\n    private static double deg2rad(double deg) {\r\n        return (deg * Math.PI / 180.0);\r\n    }\r\n    private static double rad2deg(double rad) {\r\n        return (rad * 180 / Math.PI);\r\n    }\r\n    private void goProfile(){\r\n        Intent intent = new Intent (this, ProfileActivity.class);\r\n        finish();\r\n        startActivity(intent);\r\n\r\n    }\r\n    public void onBackPressed() {\r\n        backPressHandler.onBackPressed(\"뒤로가기 버튼 한번 더 누르면 종료\", 3000);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/leave_a_record/InterfaceActivity/EditActivity.java	(revision bb78fb2b4beb8c353ff57354b41720371d5a59eb)
+++ app/src/main/java/com/example/leave_a_record/InterfaceActivity/EditActivity.java	(date 1609148902227)
@@ -52,15 +52,12 @@
     Button save_content;
     TextView current_time;
     ArrayList<post_data_image> pd_datas_receive;
-
     FirebaseAuth mAuth;
     DatabaseReference mDatabase;
     DatabaseReference mdatabase;
     DatabaseReference oDatabase;
-
     List<image_edit_data> imageditdataList;
     List<String> post_images_URI;
-
     List<String> post_meta_datetime;
     List<String> post_pin;
     List<String> post_meta_gps_Latitue;
@@ -322,7 +319,7 @@
         }
     }
 
-
+//자동으로 핀을 지정해주는 알고리즘 수정 필요하다고 생각함.
     public void autopin(List<String> lat ,List<String> lon,List<String> pin){
         int i;
         double sum=0;
@@ -366,9 +363,9 @@
         Intent intent = new Intent (this, ProfileActivity.class);
         finish();
         startActivity(intent);
-
     }
-    public void onBackPressed() {
-        backPressHandler.onBackPressed("뒤로가기 버튼 한번 더 누르면 종료", 3000);
-    }
+    //BackPress 새롭게 만들어야함
+//    public void onBackPressed() {
+//        backPressHandler.onBackPressed("뒤로가기 버튼 한번 더 누르면 종료", 3000);
+//    }
 }
Index: app/src/main/java/com/example/leave_a_record/DataBase/Database_M.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.leave_a_record.DataBase;\r\nimport android.app.Activity;\r\nimport android.net.Uri;\r\nimport android.util.Log;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\n\r\nimport com.example.leave_a_record.InterfaceActivity.SignupActivity;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\n\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\n\r\nimport java.net.URI;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Vector;\r\nimport java.util.concurrent.Executor;\r\n\r\npublic class Database_M  {\r\n\r\n    private static Database_M dbM = new Database_M();\r\n    private FirebaseAuth mAuth;   // 파이어베이스 인증 객체\r\n    private static Data_M data_m = new Data_M();\r\n    private UserData userData;\r\n    private FirebaseUser firebaseUser;\r\n    private FirebaseFirestore database;\r\n    private DatabaseReference mDatabase;\r\n    private FirebaseStorage storage = FirebaseStorage.getInstance();\r\n    StorageReference storageRef = storage.getReference();\r\n    StorageReference desertRef;\r\n\r\n    // Create a reference with an initial file path and name\r\n//    StorageReference pathReference = storageRef.child(\"images/stars.jpg\");\r\n\r\n    // Create a reference to a file from a Google Cloud Storage URI\r\n//    StorageReference gsReference = storage.getReferenceFromUrl(\"gs://bucket/images/stars.jpg\");\r\n\r\n    // Create a reference from an HTTPS URL\r\n// Note that in the URL, characters are URL escaped!\r\n//    StorageReference httpsReference = storage.getReferenceFromUrl(\"https://firebasestorage.googleapis.com/b/bucket/o/images%20stars.jpg\");\r\n\r\n    String TAG=\"실행중 : \";\r\n    // 생성자\r\n    public Database_M() {\r\n//        private static DatabaseManagement mData = new DatabaseManagement();\r\n        mAuth = FirebaseAuth.getInstance();\r\n        database = FirebaseFirestore.getInstance();\r\n        firebaseUser = FirebaseAuth.getInstance().getCurrentUser();\r\n        mDatabase = FirebaseDatabase.getInstance().getReference();\r\n    }\r\n    public static Database_M getInstance() {\r\n        return dbM;\r\n    }\r\n\r\n\r\n    //로그인\r\n    public void SignInEmail(final Activity activity , String email, String password , final Callback<Boolean> callback){\r\n        if (email.length() > 0 && password.length() > 0) {\r\n            mAuth.signInWithEmailAndPassword(email, password)\r\n                    .addOnCompleteListener(activity, new OnCompleteListener<AuthResult>() {\r\n                        // 작업 완료시\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<AuthResult> task) {\r\n                            // 이메일 로그인 성공\r\n                            if(task.isSuccessful()) {\r\n                                Log.d(\"현재 진행중인 것은\", \"-------------로그인중입니다.\");\r\n                                getUserData(mAuth.getCurrentUser().getUid(), new Callback<UserData>() {\r\n                                    @Override\r\n                                    public void onCallback(UserData data) {\r\n                                        Log.d(\"정보가져오기 \", \"-----------------시작 -----------------\");\r\n\r\n                                        if (data != null) {\r\n                                            Data_M.getInstance().setUserData(data);\r\n                                            Log.d(\"정보가져오기 \", \"-----------------복사 완료 -----------------\");\r\n                                            callback.onCallback(true);\r\n                                        }else{\r\n                                            callback.onCallback(false);\r\n                                        }\r\n                                    }\r\n                                });\r\n                                Toast.makeText(activity,\"로그인되었습니다.\",Toast.LENGTH_SHORT).show();\r\n                            } else {\r\n                                // 로그인 실패시\r\n                                Toast.makeText(activity,\"아이디와 비밀번호를 확인해주세요.\",Toast.LENGTH_SHORT).show();\r\n                            }\r\n                        }\r\n                    });\r\n\r\n        }\r\n        else {\r\n            Toast.makeText(activity, \"아이디와 비밀번호를 입력해주세요.\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n    public void signUp(final Activity activity, String id, String pwd, String name, String pwd_c, Callback<Boolean> callback) {\r\n        final String email = id;\r\n        final String passwd = pwd;\r\n        final String userName = name;\r\n        String passwd_c=pwd_c;\r\n//        String email =((EditText)findViewById(R.id.signup_id)).getText().toString();\r\n//        String password = ((EditText)findViewById(R.id.signup_pw)).getText().toString();\r\n//        String passwordCheck=((EditText)findViewById(R.id.signup_pwd)).getText().toString();\r\n\r\n        if(email.length()>0&&passwd.length()>0&&passwd_c.length()>0&&userName.length()>0) {\r\n            if (passwd.equals(passwd_c)) {\r\n                mAuth.createUserWithEmailAndPassword(email, passwd)\r\n                        .addOnCompleteListener((Executor) this, new OnCompleteListener<AuthResult>() {\r\n                            @Override\r\n                            public void onComplete(@NonNull Task<AuthResult> task) {\r\n                                if (task.isSuccessful()) {\r\n                                    // Sign in success, update UI with the signed-in user's information\r\n                                    Log.d(TAG, \"createUserWithEmail:success\");\r\n                                    FirebaseUser user =  mAuth.getCurrentUser();\r\n\r\n                                    UserData userdata=new UserData(email,userName,passwd,user.getUid());\r\n//                                    mDatabase.child(\"Users\").setValue(userdata);\r\n                                    Log.d(\"회원가입중 유저의 데이터 보기\",userdata.getUser_about());\r\n\r\n                                    Log.d(TAG, \"유저데이터 객체 생성 성공하였음======================:success\");\r\n\r\n//                                    FirebaseFirestore db=FirebaseFirestore.getInstance();\r\n\r\n                                    Log.d(TAG, \"db인스턴스 성공했음 ======================:success\");\r\n                                    Log.d(TAG, \"child 로 넘겼음 유저데이터 =====================:success\");\r\n\r\n                                    if(user !=null)\r\n                                        mDatabase.child(user.getUid()).setValue(userdata)\r\n//                                    db.collection(\"users\").document(user.getUid()).set(userdata)\r\n                                                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                                    @Override\r\n                                                    public void onSuccess(Void aVoid) {\r\n                                                        Log.d(TAG, \"회원등록 성공\");\r\n                                                    }\r\n                                                })\r\n                                                .addOnFailureListener(new OnFailureListener() {\r\n                                                    @Override\r\n                                                    public void onFailure(@NonNull Exception e) {\r\n                                                        Log.w(TAG, \"회원등록 실패\", e);\r\n                                                    }\r\n                                                });\r\n                                    Toast.makeText(activity,\"회원가입성공\",Toast.LENGTH_SHORT).show();\r\n//                                    updateUI(user);\r\n\r\n                                } else {\r\n                                    // If sign in fails, display a message to the user.\r\n                                    Log.w(TAG, \"createUserWithEmail:failure\", task.getException());\r\n//                                    goToast(\"이미 존재하는 아이디입니다.\");\r\n                                }\r\n\r\n                                // ...\r\n                            }\r\n                        });\r\n            } else {\r\n//                goToast(\"비밀번호가 일치하지 않습니다.\");\r\n            }\r\n        }\r\n        else{\r\n//            goToast(\"모든항목을 작성해주세요.\");\r\n        }\r\n\r\n\r\n\r\n    }\r\n    public void SignOut(){\r\n        mAuth.getInstance().signOut();\r\n    }\r\n    //유저데이터를 가져오는 메소드\r\n    public void getUserData(String uid, final Callback<UserData> callback) {\r\n        FirebaseDatabase.getInstance().getReference().child(\"users\").child(uid)\r\n                .addValueEventListener(new ValueEventListener(){\r\n                    @Override\r\n                    public void onDataChange(DataSnapshot dataSnapshot){\r\n                        userData = dataSnapshot.getValue(UserData.class);\r\n                        Log.d(\"정보가져오기 \", \"-----------------성공 -----------------\");\r\n                        callback.onCallback(userData);\r\n                        Log.d(\"지금 로그인된 아이디는\", userData.getUser_name());\r\n                    }\r\n                    @Override\r\n                    public void onCancelled(DatabaseError databaseError){\r\n                        Log.d(\"정보가져오기 \", \"-----------------실패 -----------------\");\r\n                    }\r\n        });\r\n    }\r\n    //post 전부 들을 가져오는 메소드\r\n    public void getPosts(String uid,final Callback<List<String>> callback){\r\n        FirebaseDatabase.getInstance().getReference().child(\"posts\").child(uid).child(\"postData\")\r\n                .addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        List<String> posts=new ArrayList<>();\r\n                        int i=0;\r\n                        for (DataSnapshot postSnapshot: snapshot.getChildren()) {\r\n                            posts.add(postSnapshot.getKey());\r\n                            Log.d(\"지금 가져오는키는\",posts.get(i));\r\n                            i++;\r\n                        }\r\n                        Log.d(\"정보가져오기\" ,\"성공적으로 포스트들을 가져왔습니다.\");\r\n                        callback.onCallback(posts);\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n                        Log.d(\"정보가져오기\",\"포스트를 가져오는데 실패했습니다.\");\r\n                        callback.onCallback(null);\r\n                    }\r\n                });\r\n    }\r\n    //포스트갯수를 가져오는 메소드\r\n    public void CountPosts(String uid,final Callback<Integer> callback){\r\n        FirebaseDatabase.getInstance().getReference().child(\"posts\").child(uid).child(\"postData\")\r\n                .addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        int i;\r\n//                        for (DataSnapshot postSnapshot: snapshot.getChildren()) {\r\n//                            i++;\r\n//                        }\r\n                        i=(int)snapshot.getChildrenCount();\r\n                        Log.d(\"정보가져오기\" ,\"현재 포스트의 개수는 : \"+Integer.toString(i));\r\n                        callback.onCallback(i);\r\n\r\n                    }\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n                        Log.d(\"정보가져오기\",\"포스트를 가져오는데 실패했습니다.\");\r\n                        callback.onCallback(null);\r\n                    }\r\n                });\r\n    }\r\n\r\n    //포스트에 인덱스부분만 가져오는 메소드\r\n    public void getPosts_i(final int index,String uid,final Callback<String> callback){\r\n        FirebaseDatabase.getInstance().getReference().child(\"posts\").child(uid).child(\"postData\")\r\n                .addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        List<String> posts=new ArrayList<>();\r\n                        int i=0;\r\n                        for (DataSnapshot postSnapshot: snapshot.getChildren()) {\r\n                            posts.add(postSnapshot.getKey());\r\n                            Log.d(\"지금 가져오는키는\",posts.get(i));\r\n                            i++;\r\n                        }\r\n                        Log.d(\"정보가져오기\" ,\"성공적으로 포스트들을 가져왔습니다.\");\r\n                        Log.d(\"콜백키는\" ,posts.get(index));\r\n                        callback.onCallback(posts.get(index));\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n                        Log.d(\"정보가져오기\",\"포스트를 가져오는데 실패했습니다.\");\r\n                        callback.onCallback(null);\r\n                    }\r\n                });\r\n    }\r\n    public void getPostdata(String post_date,String uid,final Callback<PostData> callback){\r\n\r\n        FirebaseDatabase.getInstance().getReference().child(\"posts\").child(uid).child(\"postData\").child(post_date)\r\n                .addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                       PostData postdata = snapshot.getValue(PostData.class);\r\n                       callback.onCallback(postdata);\r\n                    }\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n\r\n                });\r\n    }\r\n    //post를 전부읽는 메소드\r\n    public void AllgetPostData(final ArrayList<PostData> postdatas , final Callback<List<PostData>> callback){\r\n        // 포스트의 날짜들을 가져오는 메소드\r\n        getPosts(mAuth.getCurrentUser().getUid(), new Callback<List<String>>() {\r\n            @Override\r\n            public void onCallback(final List<String> data) {\r\n                if (data != null) {\r\n                    int i;\r\n                    for(i=0;i<data.size();i++) {\r\n                        Log.d(\"현재 인덱스는 : \",Integer.toString(i));\r\n                        // 날짜가 존재할경우 포스트를 읽기시작한다.\r\n                        readPost(data.get(i), new Callback<PostData>() {\r\n                            @Override\r\n                            public void onCallback(PostData postdata) {\r\n                                if (postdata != null) {\r\n                                   postdatas.add(postdata);\r\n                                    Log.d(\"post가져와서 추가중\", \"추가중\");\r\n                                }\r\n//                                else if(postdatas.size()== data.size()-1){\r\n//                                    Log.d(\"post가져와서 추가중\", \"마지막작업 리스트뷰 onCallbackPost의 업로드 \");\r\n//                                    callback.onCallback(postdatas);\r\n//                                }\r\n                                else\r\n                                 {\r\n                                    Log.d(\"post가져오는중\", \"에러발생\");\r\n                                }\r\n                                if(postdatas.size()==data.size()){\r\n                                    Log.d(\"post가져와서 추가중\", \"마지막작업 리스트뷰 onCallbackPost의 업로드 \");\r\n                                    callback.onCallback(postdatas);\r\n                                }\r\n                            }\r\n\r\n                        });\r\n                    }\r\n//                    Log.d(\"가져오 데이터의 제목 : \",postdatas.get(0).getPost_title());\r\n                    Log.d(\"post가져와서 추가완료\", \"추가완료되었습니다.\");\r\n                }\r\n                else {\r\n                    Log.d(\"post가져오는중\",\"에러발생\");\r\n                }\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n    //post의 일부 데이터를 가져와서 읽어들이는 메소드\r\n//    public void getPostData(final int i,final Callback<PostData> callback){\r\n//        // 포스트의 날짜들을 가져오는 메소드\r\n//        getPosts_i(i,mAuth.getCurrentUser().getUid(), new Callback<String>() {\r\n//            @Override\r\n//            public void onCallback(String data) {\r\n//                if (data != null) {\r\n//                    // 날짜가 존재할경우 포스트를 읽기시작한다.\r\n//                    readPost(data, new Callback<PostData>() {\r\n//                        @Override\r\n//                        public void onCallback(PostData postdata) {\r\n//                            if(postdata!=null) {\r\n//                                callback.onCallback(postdata);\r\n//                            }\r\n//                            else{\r\n//                                Log.d(\"post가져오는중\",\"에러발생\");\r\n//                            }\r\n//                        }\r\n//                    });\r\n//\r\n//                }\r\n//                else {\r\n//                    Log.d(\"post가져오는중\",\"에러발생\");\r\n//                }\r\n//\r\n//            }\r\n//        });\r\n//    }\r\n    public void readPost(final String post_date,final Callback<PostData> callback){\r\n        FirebaseDatabase.getInstance().getReference().child(\"posts\").child(mAuth.getCurrentUser().getUid()).child(\"postData\")\r\n                .child(post_date).addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                Log.d(\"정보가져오기\",post_date);\r\n                PostData postdata=snapshot.getValue(PostData.class);\r\n                Log.d(\"정보가져오기\",\"게시물의 데이터를 성공적으로 가져왔습니다!!!!!!!!\");\r\n                Log.d(\"정보가져오기\",postdata.getPost_title());\r\n                callback.onCallback(postdata);\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                Log.d(\"정보가져오기\",\"게시물의 데이터를 가져오는데 실패하였습니다\");\r\n                callback.onCallback(null);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n   // 유저이름 동기화\r\n    public void userName(final Callback<String> callback) {\r\n//        UserData userData = Data_M.getInstance().getUserData();\r\n//        String name = userData.getUser_name();\r\n//        callback.onCallback(name);\r\n        FirebaseDatabase.getInstance().getReference().child(\"users\").child(mAuth.getCurrentUser().getUid())\r\n                .addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                UserData userData=snapshot.getValue(UserData.class);\r\n                Log.d(\"정보가져오기\",\"게시물의 데이터를 성공적으로 가져왔습니다!!!!!!!!\");\r\n                Log.d(\"정보가져오기\",userData.getUser_name());\r\n                callback.onCallback(userData.getUser_name());\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                Log.d(\"정보가져오기\",\"게시물의 데이터를 가져오는데 실패하였습니다\");\r\n                callback.onCallback(null);\r\n            }\r\n        });\r\n    }\r\n    public void userAbout(final Callback<String> callback) {\r\n//        UserData userData = Data_M.getInstance().getUserData();\r\n//        String name = userData.getUser_name();\r\n//        callback.onCallback(name);\r\n        FirebaseDatabase.getInstance().getReference().child(\"users\").child(mAuth.getCurrentUser().getUid())\r\n                .addValueEventListener(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        UserData userData=snapshot.getValue(UserData.class);\r\n                        Log.d(\"정보가져오기\",\"게시물의 데이터를 성공적으로 가져왔습니다!!!!!!!!\");\r\n                        Log.d(\"정보가져오기\",userData.getUser_about());\r\n                        callback.onCallback(userData.getUser_about());\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n                        Log.d(\"정보가져오기\",\"게시물의 데이터를 가져오는데 실패하였습니다\");\r\n                        callback.onCallback(null);\r\n                    }\r\n                });\r\n    }\r\n    // 회원가입\r\n    public void SignUp(final Activity activity, final String email, final String passwd, String passwd_c, final String userName, final Callback<Boolean> callback){\r\n        if (email.length() > 0 && passwd.length() > 0 && passwd_c.length() > 0 && userName.length() > 0) {\r\n            if (passwd.equals(passwd_c)) {\r\n                mAuth.createUserWithEmailAndPassword(email, passwd).addOnCompleteListener(activity,new OnCompleteListener<AuthResult>() {\r\n                            @Override\r\n                            public void onComplete(@NonNull Task<AuthResult> task) {\r\n                                if (task.isSuccessful()) {\r\n                                    Log.d(TAG, \"createUserWithEmail:success\");\r\n                                    FirebaseUser user = mAuth.getCurrentUser();\r\n                                    UserData userdata = new UserData(email, userName, passwd, user.getUid());\r\n                                    if (user != null)\r\n                                        mDatabase.child(\"users\").child(user.getUid()).setValue(userdata)\r\n                                                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                                    @Override\r\n                                                    public void onSuccess(Void aVoid) {\r\n                                                        Log.d(TAG, \"회원등록 성공\");\r\n                                                        callback.onCallback(true);\r\n                                                    }\r\n                                                })\r\n                                                .addOnFailureListener(new OnFailureListener() {\r\n                                                    @Override\r\n                                                    public void onFailure(@NonNull Exception e) {\r\n                                                        Log.w(TAG, \"회원등록 실패\", e);\r\n                                                        callback.onCallback(false);\r\n                                                    }\r\n                                                });\r\n                                    Toast.makeText(activity, \"회원가입성공\", Toast.LENGTH_SHORT).show();\r\n                                }\r\n                                else {\r\n                                    Log.w(TAG, \"createUserWithEmail:failure\", task.getException());\r\n                                    Toast.makeText(activity, \"이미존재하는 아이디입니다.\", Toast.LENGTH_SHORT).show();\r\n                                    callback.onCallback(false);\r\n                                }\r\n                            }\r\n                        });\r\n            } else {\r\n                Toast.makeText(activity, \"비밀번호가 일치하지않습니다.\", Toast.LENGTH_SHORT).show();\r\n                callback.onCallback(false);\r\n            }\r\n        } else {\r\n            Toast.makeText(activity, \"모든항목을 작성해주세요.\", Toast.LENGTH_SHORT).show();\r\n            callback.onCallback(false);\r\n        }\r\n    }\r\n\r\n    public void AllgetImageUri(final List<String> str,final Vector<Uri> postImageUri,final Callback<Vector<Uri>> callback){\r\n        for(int i=0;i<str.size();i++){\r\n            getImageUri(i, str,postImageUri, new Callback <Vector<Uri>>() {\r\n                @Override\r\n                public void onCallback(Vector<Uri> data) {\r\n                    if(data!=null) {\r\n                        Log.d(\"AllgetImageUri : \",postImageUri.toString());\r\n                    }\r\n                    else{\r\n                        Log.d(\"AllgetImageUri : \",\"error\");\r\n                    }\r\n                    if(NulllCheck(postImageUri)){\r\n                        callback.onCallback(postImageUri);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    public void getImageUri(final int i , List<String> str, final Vector<Uri> postImageUri, final Callback<Vector<Uri>> callback) {\r\n            storageRef.child(\"images/\" + str.get(i)).getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {\r\n                @Override\r\n                public void onSuccess(Uri uri) {\r\n                    Log.d(\"이미지다운로드 성공\", \": Success -이미지가 다운로드되었습니다.\");\r\n                    Log.d(\"이미지다운로도된 Uri 는 : \", uri.toString());\r\n                    Log.d(\"현재 벡터의 사이즈는 : \", Integer.toString(postImageUri.size()));\r\n\r\n                    postImageUri.set(i, uri);\r\n                    callback.onCallback(postImageUri);\r\n//                    if(!uri.equals(null)){\r\n//                        callback.onCallback(uri);\r\n//                    }\r\n\r\n                }\r\n            }).addOnFailureListener(new OnFailureListener() {\r\n                @Override\r\n                public void onFailure(@NonNull Exception exception) {\r\n                    Log.d(\"이미지다운로드 실패\", \": failed -이미지가 다운로드되지 않았습니다.\");\r\n                }\r\n            });\r\n    }\r\n    public Boolean NulllCheck(Vector<Uri> temp) {\r\n        for (int i = 0; i < temp.size(); i++) {\r\n            try {\r\n                //액션을 취해야함. 확인체크\r\n                if(temp.get(i).equals(null)){\r\n                    return false;\r\n                }\r\n                Log.d(\"널포인터 체크 pass index:\", Integer.toString(i));\r\n            }\r\n            catch(NullPointerException e){\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n    public void SingleImageUri(String image_str,final Callback<Uri> callback){\r\n        storageRef.child(\"images/\" + image_str).getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {\r\n            @Override\r\n            public void onSuccess(Uri uri) {\r\n                Log.d(\"Single이미지 다운로드 성공\", \": Success - SINGLE 이미지가 다운로드되었습니다.\");\r\n                callback.onCallback(uri);\r\n            }\r\n        });\r\n    }\r\n    public void setProfileImage(String profileimage) {\r\n        FirebaseDatabase.getInstance().getReference().child(\"users\").child(mAuth.getCurrentUser().getUid()).child(\"user_image\").setValue(profileimage);\r\n    }\r\n    public void DeleteImage(String image_file,final Callback<Boolean> callback){\r\n        desertRef=storageRef.child(\"images/\"+image_file+\".jpg\");\r\n        desertRef.delete().addOnSuccessListener(new OnSuccessListener<Void>() {\r\n            @Override\r\n            public void onSuccess(Void aVoid) {\r\n                Log.d(\"이미지파일이 삭제되었습니다 : \",\"Success\");\r\n                callback.onCallback(true);\r\n            }\r\n        }).addOnFailureListener(new OnFailureListener() {\r\n            @Override\r\n            public void onFailure(@NonNull Exception exception) {\r\n                Log.d(\"삭제할 이미지가 없습니다. : \",\"Failed\");\r\n                callback.onCallback(true);\r\n            }\r\n        });\r\n    }\r\n    public void Name_change(String name){\r\n        FirebaseDatabase.getInstance().getReference().child(\"users\").child(mAuth.getCurrentUser().getUid()).child(\"user_name\").setValue(name);\r\n    }\r\n    public void About_change(String about){\r\n        FirebaseDatabase.getInstance().getReference().child(\"users\").child(mAuth.getCurrentUser().getUid()).child(\"user_about\").setValue(about);\r\n    }\r\n    public void Call_reco_post(final Callback<List<String>> callback){\r\n        Log.d(\"어디인거야\",\"콜포\");\r\n        FirebaseDatabase.getInstance().getReference().child(\"open\").addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                List<String> open=new ArrayList<>();\r\n                int i=0;\r\n                for(DataSnapshot openSnapshot:snapshot.getChildren()){\r\n                    open.add(openSnapshot.getKey());\r\n                    Log.d(\"지금 가져오는키는\",open.get(i));\r\n                    i++;\r\n                }\r\n                callback.onCallback(open);\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                callback.onCallback(null);\r\n            }\r\n        });\r\n    }\r\n    public void open_post_call(String str,final Callback<PostData> callback) {\r\n        Log.d(\"어디인거야\",\"포콜\");\r\n        FirebaseDatabase.getInstance().getReference().child(\"open\").child(str).addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                PostData opendata=snapshot.getValue(PostData.class);\r\n                callback.onCallback(opendata);\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n    }\r\n    public void Check_reco(final List<PostData> List, final Callback <List<PostData>> callback) {\r\n\r\n        Call_reco_post(new Callback<List<String>>() {\r\n            @Override\r\n            public void onCallback(final List<String> data_str) {\r\n                for(int i=0;i<data_str.size();i++) {\r\n                    open_post_call(data_str.get(i), new Callback<PostData>() {\r\n                        @Override\r\n                        public void onCallback(PostData data_post) {\r\n                            List<PostData> open_source=new ArrayList<>();\r\n                            open_source.add(data_post);\r\n                            List.add(data_post);\r\n                           }\r\n                        });\r\n                    }\r\n                callback.onCallback(List);\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n    private static double distance(double lat1, double lon1, double lat2, double lon2, String unit) {\r\n        Log.d(\"어디인거야\",\"디텐\");\r\n        double theta = lon1 - lon2;\r\n        double dist = Math.sin(deg2rad(lat1)) * Math.sin(deg2rad(lat2)) + Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.cos(deg2rad(theta));\r\n\r\n        dist = Math.acos(dist);\r\n        dist = rad2deg(dist);\r\n        dist = dist * 60 * 1.1515;\r\n\r\n        if(unit == \"meter\"){\r\n            dist = dist * 1609.344;\r\n        }\r\n\r\n        Log.d(\"dist 값은\",Double.toString(dist));\r\n        return (dist);\r\n    }\r\n\r\n    // This function converts decimal degrees to radians\r\n    private static double deg2rad(double deg) {\r\n        return (deg * Math.PI / 180.0);\r\n    }\r\n\r\n    // This function converts radians to decimal degrees\r\n    private static double rad2deg(double rad) {\r\n        return (rad * 180 / Math.PI);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//    public void getKey(final Callback<String> callback){\r\n//        FirebaseDatabase.getInstance().getReference()\r\n//                .child(\"posts\")\r\n//                .child(cAuth.getCurrentUser().getUid())\r\n//                .addValueEventListener(new ValueEventListener() {\r\n//                    @Override\r\n//                    public void onDataChange(DataSnapshot dataSnapshot) {\r\n//                        img_key_name.clear();\r\n//                        img_key_name.add(\"\");\r\n//                        int i = 0;\r\n//                        for (DataSnapshot child : dataSnapshot.getChildren()) {\r\n//                            img_key_name.add(child.getKey());\r\n//                            Log.d(\"key : \", img_key_name.get(i));\r\n////                                imageLoad(i);\r\n////                            callback.onCallback(true);\r\n//                            callback.onCallback(img_key_name.get(i));\r\n//                            image_show(callback);\r\n//                            i++;\r\n//\r\n//                        }\r\n//\r\n//                    }\r\n//\r\n//                    @Override\r\n//                    public void onCancelled(@NonNull DatabaseError error) {\r\n//                        callback.onCallback(null);\r\n//                    }\r\n//                });\r\n//    }\r\n//    public void image_show(final Callback<String> callback){\r\n//        FirebaseDatabase.getInstance().getReference()\r\n//                .child(\"posts\")\r\n//                .child(cAuth.getCurrentUser().getUid()).child(callback.toString())\r\n//                .addValueEventListener(new ValueEventListener() {\r\n//                    @Override\r\n//                    public void onDataChange(DataSnapshot dataSnapshot) {\r\n//                        for (DataSnapshot data : dataSnapshot.getChildren()) {\r\n//                            PostData postData=data.getValue(PostData.class);\r\n//                            img.add(postData.getPost_images_URI().get(0));\r\n//                        }\r\n//\r\n//                    }\r\n//\r\n//                    @Override\r\n//                    public void onCancelled(@NonNull DatabaseError error) {\r\n//\r\n//                    }\r\n//                });\r\n//    }\r\n\r\n    public FirebaseAuth getmAuth() {\r\n        return mAuth;\r\n    }\r\n\r\n    public void setmAuth(FirebaseAuth mAuth) {\r\n        this.mAuth = mAuth;\r\n    }\r\n//    public UserData getUserData() {\r\n//        return userData;\r\n//    }\r\n//    public void setUserData(UserData userData) {\r\n//        this.userData = userData;\r\n//    }\r\n\r\n    public static Database_M getDbM() {\r\n        return dbM;\r\n    }\r\n\r\n    public static void setDbM(Database_M dbM) {\r\n        Database_M.dbM = dbM;\r\n    }\r\n\r\n    public FirebaseUser getFirebaseUser() {\r\n        return firebaseUser;\r\n    }\r\n\r\n    public void setFirebaseUser(FirebaseUser firebaseUser) {\r\n        this.firebaseUser = firebaseUser;\r\n    }\r\n\r\n    public DatabaseReference getmDatabase() {\r\n        return mDatabase;\r\n    }\r\n\r\n    public void setmDatabase(DatabaseReference mDatabase) {\r\n        this.mDatabase = mDatabase;\r\n    }\r\n\r\n    public FirebaseFirestore getDatabase() {\r\n        return database;\r\n    }\r\n\r\n    public void setDatabase(FirebaseFirestore database) {\r\n        this.database = database;\r\n    }\r\n\r\n    public String getTAG() {\r\n        return TAG;\r\n    }\r\n\r\n    public void setTAG(String TAG) {\r\n        this.TAG = TAG;\r\n    }\r\n\r\n    // 객체 가져오기\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/leave_a_record/DataBase/Database_M.java	(revision bb78fb2b4beb8c353ff57354b41720371d5a59eb)
+++ app/src/main/java/com/example/leave_a_record/DataBase/Database_M.java	(date 1608553820000)
@@ -400,9 +400,6 @@
         });
     }
     public void userAbout(final Callback<String> callback) {
-//        UserData userData = Data_M.getInstance().getUserData();
-//        String name = userData.getUser_name();
-//        callback.onCallback(name);
         FirebaseDatabase.getInstance().getReference().child("users").child(mAuth.getCurrentUser().getUid())
                 .addValueEventListener(new ValueEventListener() {
                     @Override
Index: app/src/main/res/layout/page_login.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:scrollbarSize=\"24sp\"\r\n    android:orientation=\"vertical\"\r\n    >\r\n\r\n\r\n    <ImageView\r\n        android:id=\"@+id/login_page_img_header\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"280dp\"\r\n        android:contentDescription=\"@string/app_name\"\r\n        android:scaleType=\"centerCrop\"\r\n        android:src=\"@drawable/stamp_purple\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        tools:layout_editor_absoluteX=\"0dp\" />\r\n\r\n    <!--   <LinearLayout\r\n           android:layout_width=\"wrap_content\"\r\n           android:layout_height=\"wrap_content\"\r\n           android:layout_marginStart=\"18dp\"\r\n           android:gravity=\"center_vertical\"\r\n           android:orientation=\"vertical\"\r\n           app:layout_constraintBottom_toBottomOf=\"@id/login_page_img_header\"\r\n           app:layout_constraintStart_toStartOf=\"parent\"\r\n           app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n           <TextView\r\n               android:layout_width=\"wrap_content\"\r\n               android:layout_height=\"wrap_content\"\r\n               android:includeFontPadding=\"false\"\r\n               android:text=\"Login\"\r\n               android:textColor=\"@color/colorLayerDark\"\r\n               android:textSize=\"25sp\"\r\n               android:textStyle=\"bold\" />\r\n\r\n\r\n       </LinearLayout> -->\r\n\r\n    <View\r\n        android:id=\"@+id/viewSuppoter\"\r\n        android:layout_width=\"1dp\"\r\n        android:layout_height=\"1dp\"\r\n        android:layout_marginBottom=\"30dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"@+id/login_page_img_header\"\r\n        app:layout_constraintStart_toStartOf=\"parent\" />\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"0dp\"\r\n        android:background=\"@drawable/bg_login\"\r\n        android:paddingStart=\"30dp\"\r\n        android:paddingEnd=\"30dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/viewSuppoter\"\r\n        app:layout_constraintVertical_bias=\"1.0\"\r\n        tools:layout_editor_absoluteX=\"0dp\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/login_text_login\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"10dp\"\r\n            android:layout_marginTop=\"25dp\"\r\n            android:layout_marginEnd=\"10dp\"\r\n            android:gravity=\"center\"\r\n            android:text=\"로그인\"\r\n            android:textColor=\"@color/colorTextPrimary\"\r\n            android:textSize=\"20sp\"\r\n            android:textStyle=\"bold\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n\r\n        <EditText\r\n            android:id=\"@+id/login_id\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"10dp\"\r\n            android:layout_marginTop=\"40dp\"\r\n            android:layout_marginEnd=\"10dp\"\r\n            android:background=\"@null\"\r\n            android:hint=\"이메일\"\r\n            android:imeOptions=\"actionNext\"\r\n            android:inputType=\"textEmailAddress\"\r\n            android:paddingStart=\"60dp\"\r\n            android:paddingEnd=\"10dp\"\r\n            android:textColor=\"@color/colorTextPrimary\"\r\n            android:textSize=\"15sp\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/login_text_login\"\r\n            tools:ignore=\"Autofill\" />\r\n\r\n        <View\r\n            android:id=\"@+id/view_email\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"1dp\"\r\n            android:layout_marginStart=\"10dp\"\r\n            android:layout_marginTop=\"10dp\"\r\n            android:layout_marginEnd=\"10dp\"\r\n            android:background=\"@color/colorTextHint\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/login_id\" />\r\n\r\n        <ImageView\r\n            android:layout_width=\"20dp\"\r\n            android:layout_height=\"20dp\"\r\n            android:layout_marginStart=\"10dp\"\r\n            android:contentDescription=\"@string/app_name\"\r\n            android:src=\"@drawable/ic_email\"\r\n            app:layout_constraintBottom_toBottomOf=\"@id/login_id\"\r\n            app:layout_constraintStart_toStartOf=\"@id/login_id\"\r\n            app:tint=\"@color/colorTextHint\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/login_pw\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"10dp\"\r\n            android:layout_marginTop=\"40dp\"\r\n            android:layout_marginEnd=\"10dp\"\r\n            android:background=\"@null\"\r\n            android:hint=\"비밀번호\"\r\n            android:imeOptions=\"actionDone\"\r\n            android:inputType=\"textPassword\"\r\n            android:paddingStart=\"60dp\"\r\n            android:paddingEnd=\"10dp\"\r\n            android:textColor=\"@color/colorTextPrimary\"\r\n            android:textSize=\"15sp\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/view_email\"\r\n            tools:ignore=\"Autofill\" />\r\n\r\n        <View\r\n            android:id=\"@+id/view_password\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"1dp\"\r\n            android:layout_marginStart=\"10dp\"\r\n            android:layout_marginTop=\"10dp\"\r\n            android:layout_marginEnd=\"10dp\"\r\n            android:background=\"@color/colorTextHint\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/login_pw\" />\r\n\r\n        <ImageView\r\n            android:layout_width=\"20dp\"\r\n            android:layout_height=\"20dp\"\r\n            android:layout_marginStart=\"10dp\"\r\n            android:contentDescription=\"@string/app_name\"\r\n            android:src=\"@drawable/ic_lock\"\r\n            app:layout_constraintBottom_toBottomOf=\"@id/login_pw\"\r\n            app:layout_constraintStart_toStartOf=\"@id/login_pw\"\r\n            app:tint=\"@color/colorTextHint\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/login_bt\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"10dp\"\r\n            android:layout_marginTop=\"40dp\"\r\n            android:layout_marginEnd=\"10dp\"\r\n            android:background=\"@drawable/btn_login\"\r\n            android:text=\"Login\"\r\n            android:textAllCaps=\"false\"\r\n            android:textColor=\"@color/colorWhite\"\r\n            android:textSize=\"13sp\"\r\n            android:textStyle=\"bold\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/view_password\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/login_text_notMember\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"10dp\"\r\n            android:layout_marginTop=\"20dp\"\r\n            android:layout_marginEnd=\"10dp\"\r\n            android:gravity=\"center\"\r\n            android:text=\"회원이 아니신가요?\"\r\n            android:textSize=\"13sp\"\r\n            app:layout_constraintBottom_toTopOf=\"@id/loginTosignup_bt\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/login_bt\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/loginTosignup_bt\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:background=\"@drawable/btn_createaccout\"\r\n            android:text=\"계정 만들기\"\r\n            android:textAllCaps=\"false\"\r\n            android:textColor=\"@color/main_color_100\"\r\n            android:textSize=\"13sp\"\r\n            android:textStyle=\"bold\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"@id/login_text_notMember\"\r\n            app:layout_constraintVertical_bias=\"0.25\"\r\n            tools:layout_editor_absoluteX=\"30dp\" />\r\n\r\n\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/page_login.xml	(revision bb78fb2b4beb8c353ff57354b41720371d5a59eb)
+++ app/src/main/res/layout/page_login.xml	(date 1608545925104)
@@ -156,7 +156,7 @@
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
             android:layout_marginStart="10dp"
-            android:layout_marginTop="40dp"
+            android:layout_marginTop="30dp"
             android:layout_marginEnd="10dp"
             android:background="@drawable/btn_login"
             android:text="Login"
@@ -171,16 +171,15 @@
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
             android:layout_marginStart="10dp"
-            android:layout_marginTop="20dp"
             android:layout_marginEnd="10dp"
             android:gravity="center"
             android:text="회원이 아니신가요?"
             android:textSize="13sp"
-            app:layout_constraintBottom_toTopOf="@id/loginTosignup_bt"
+            app:layout_constraintBottom_toTopOf="@id/loginToSignup_bt"
             app:layout_constraintTop_toBottomOf="@id/login_bt" />
 
         <Button
-            android:id="@+id/loginTosignup_bt"
+            android:id="@+id/loginToSignup_bt"
             android:layout_width="match_parent"
             android:layout_height="wrap_content"
             android:background="@drawable/btn_createaccout"
